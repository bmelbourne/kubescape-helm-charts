all capabilities:
  1: |
    raw: "Thank you for installing kubescape-operator version 1.18.16.\nView your cluster's configuration scanning schedule:  \n> kubectl -n kubescape get cj kubescape-scheduler -o=jsonpath='{.metadata.name}{\"\\t\"}{.spec.schedule}{\"\\n\"}'\n\nTo change the schedule, set `.spec.schedule`:  \n> kubectl -n kubescape edit cj kubescape-scheduler\nView your cluster's image scanning schedule:  \n> kubectl -n kubescape get cj kubevuln-scheduler -o=jsonpath='{.metadata.name}{\"\\t\"}{.spec.schedule}{\"\\n\"}'  \n\nTo change the schedule, edit `.spec.schedule`:  \n> kubectl -n kubescape edit cj kubevuln-scheduler\nView your configuration scan summaries:\n> kubectl get workloadconfigurationscansummaries -A\n\nDetailed reports are also available:\n> kubectl get workloadconfigurationscans -A\n\nView your image vulnerabilities scan summaries:\n> kubectl get vulnerabilitymanifestsummaries -A\n\nDetailed reports are also available:\n> kubectl get vulnerabilitymanifests -A\n\nkubescape-operator generates suggested network policies. To view them:  \n> kubectl get generatednetworkpolicies -n <namespace>\n\n"
  2: |
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      annotations:
        helm.sh/resource-policy: keep
      labels:
        kubescape.io/ignore: "true"
      name: helm-release-upgrader
      namespace: kubescape
    spec:
      failedJobsHistoryLimit: 1
      jobTemplate:
        spec:
          template:
            spec:
              containers:
                - env:
                    - name: HELM_CACHE_HOME
                      value: /data/helm-scratch-data/.cache
                    - name: HELM_CONFIG_HOME
                      value: /data/helm-scratch-data/.config
                    - name: HELM_DATA_HOME
                      value: /data/helm-scratch-data/.data
                  image: quay.io/kubescape/helm-release-upgrader:v0.1.0
                  imagePullPolicy: IfNotPresent
                  name: helm-release-upgrader
                  resources:
                    limits:
                      cpu: 500m
                      memory: 256Mi
                    requests:
                      cpu: 500m
                      memory: 256Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    readOnlyRootFilesystem: true
                  volumeMounts:
                    - mountPath: /data/helm-scratch-data
                      name: helm-scratch-data
              restartPolicy: OnFailure
              securityContext:
                fsGroup: 1000
                runAsGroup: 1000
                runAsNonRoot: true
                runAsUser: 1000
              serviceAccountName: helm-release-upgrader
              volumes:
                - emptyDir:
                    sizeLimit: 500Mi
                  name: helm-scratch-data
      schedule: 0 14 * * *
      successfulJobsHistoryLimit: 3
  3: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      annotations:
        helm.sh/resource-policy: keep
      labels:
        kubescape.io/ignore: "true"
      name: helm-release-upgrader
    rules:
      - apiGroups:
          - '*'
        resources:
          - '*'
        verbs:
          - '*'
  4: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      annotations:
        helm.sh/resource-policy: keep
      labels:
        kubescape.io/ignore: "true"
      name: helm-release-upgrader
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: helm-release-upgrader
    subjects:
      - kind: ServiceAccount
        name: helm-release-upgrader
        namespace: kubescape
  5: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        helm.sh/resource-policy: keep
      labels:
        kubescape.io/ignore: "true"
      name: helm-release-upgrader
      namespace: kubescape
  6: |
    apiVersion: v1
    data:
      accessKey: ZjMwNGQ3M2ItZDQzYy00MTJiLTgyZWEtZTRjODU5NDkzY2U2
      account: OWU2YzBjMmMtNmJkMC00OTE5LTgxNWItNTUwMzBkZTdjOWEw
    kind: Secret
    metadata:
      labels:
        app: cloud-secret
        kubescape.io/ignore: "true"
        kubescape.io/infra: credentials
        tier: ks-control-plane
      name: cloud-secret
      namespace: kubescape
    type: Opaque
  7: |
    apiVersion: v1
    data:
      clusterData: |
        {
          "serviceDiscovery": true,
          "gatewayWebsocketURL": "gateway:8001",
          "gatewayRestURL": "gateway:8002",
          "vulnScanURL": "kubevuln:8080",
          "kubevulnURL": "kubevuln:8080",
          "kubescapeURL": "kubescape:8080",
          "clusterName": "kind-kind",
          "storage": true,
          "relevantImageVulnerabilitiesEnabled": true,
          "namespace": "kubescape",
          "imageVulnerabilitiesScanningEnabled": true,
          "postureScanEnabled": true,
          "otelCollector": true,
          "nodeAgent": "true",
          "maxImageSize": 5.36870912e+09,
          "maxSBOMSize": 2.097152e+07,
          "keepLocal": false,
          "scanTimeout": "5m",
          "vexGeneration": true,
          "continuousPostureScan": false,
          "listingURL": "http://grype-offline-db:80/listing.json",
          "relevantImageVulnerabilitiesConfiguration": "enable"
        }
      metrics: ""
      services: ""
    kind: ConfigMap
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: Delete=false
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation
        helm.sh/hook-weight: "0"
        helm.sh/resource-policy: keep
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/infra: config
        kubescape.io/tier: core
        tier: ks-control-plane
      name: ks-cloud-config
      namespace: kubescape
  8: |
    apiVersion: v1
    data:
      capabilities: |
        {
          "capabilities":{"admissionController":"enable","autoUpgrading":"enable","configurationScan":"enable","continuousScan":"enable","enableServiceAuth":false,"malwareDetection":"enable","networkPolicyService":"enable","nodeProfileService":"enable","nodeScan":"enable","prometheusExporter":"enable","relevancy":"enable","runtimeDetection":"enable","runtimeObservability":"enable","vexGeneration":"enable","vulnerabilityScan":"enable"},
          "components":{"clamAV":{"enabled":true},"cloudSecret":{"create":true,"name":"cloud-secret"},"customCaCertificates":{"name":"custom-ca-certificates"},"gateway":{"enabled":true},"hostScanner":{"enabled":true},"kollector":{"enabled":true},"kubescape":{"enabled":true},"kubescapeScheduler":{"enabled":true},"kubevuln":{"enabled":true},"kubevulnScheduler":{"enabled":true},"nodeAgent":{"enabled":true},"operator":{"enabled":true},"otelCollector":{"enabled":true},"prometheusExporter":{"enabled":true},"serviceDiscovery":{"enabled":true},"storage":{"enabled":true},"synchronizer":{"enabled":true}},
          "configurations":{"otelUrl":"otelCollector:4317","persistence":"enable","priorityClass":{"daemonset":100000100,"enabled":true},"prometheusAnnotations":"disable"}
        }
    kind: ConfigMap
    metadata:
      labels:
        app: ks-capabilities
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: ks-capabilities
      namespace: kubescape
  9: |
    apiVersion: v1
    data:
      ca-certificates.crt: Zm9v
    kind: Secret
    metadata:
      labels:
        app: custom-ca-certificates
        kubescape.io/ignore: "true"
        kubescape.io/infra: credentials
        tier: ks-control-plane
      name: custom-ca-certificates
      namespace: kubescape
    type: Opaque
  10: |
    apiVersion: v1
    data:
      matchingRules.json: |
        {"match":[{"apiGroups":["apps"],"apiVersions":["v1"],"resources":["deployments"]}],"namespaces":["default"]}
    kind: ConfigMap
    metadata:
      labels:
        app: kubescape
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: cs-matching-rules
      namespace: kubescape
  11: |
    apiVersion: scheduling.k8s.io/v1
    description: This priority class is for node-agent daemonset pods
    globalDefault: false
    kind: PriorityClass
    metadata:
      name: kubescape-critical
    value: 1.000001e+08
  12: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: gateway
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: gateway
        helm.sh/chart: kubescape-operator-1.18.16
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: gateway
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: gateway
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/cloud-config: c4dc912bbe62b0d5fd4734206c3cae52f56d766cbc20024182a2bcef09c0ae8e
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: gateway
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: gateway
            kubescape.io/tier: core
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: false
          containers:
            - args:
                - -alsologtostderr
                - -v=4
                - 2>&1
              env:
                - name: GOMEMLIMIT
                  value: 30MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: WEBSOCKET_PORT
                  value: "8001"
                - name: HTTP_PORT
                  value: "8002"
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/gateway:v0.1.23
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /v1/liveness
                  port: readiness-port
                initialDelaySeconds: 3
                periodSeconds: 3
              name: gateway
              ports:
                - containerPort: 8000
                  name: readiness-port
                  protocol: TCP
                - containerPort: 8001
                  name: websocket
                  protocol: TCP
                - containerPort: 8002
                  name: rest-api
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /v1/readiness
                  port: readiness-port
                initialDelaySeconds: 10
                periodSeconds: 5
              resources:
                limits:
                  cpu: 100m
                  memory: 50Mi
                requests:
                  cpu: 10m
                  memory: 30Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
                - mountPath: /etc/ssl/certs/ca-certificates.crt
                  name: custom-ca-certificates
                  subPath: ca-certificates.crt
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - name: custom-ca-certificates
              secret:
                secretName: custom-ca-certificates
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
  13: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: gateway
        helm.sh/chart: kubescape-operator-1.18.16
        tier: ks-control-plane
      name: gateway
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: kubescape
                  app.kubernetes.io/name: operator
                  tier: ks-control-plane
          ports:
            - port: websocket
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: gateway
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  14: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: gateway
        kubescape.io/ignore: "true"
      name: gateway
      namespace: kubescape
    spec:
      ports:
        - name: websocket
          port: 8001
          protocol: TCP
          targetPort: 8001
        - name: http
          port: 8002
          protocol: TCP
          targetPort: 8002
      selector:
        app: gateway
      type: ClusterIP
  15: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: grype-offline-db
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: grype-offline-db
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: grype-offline-db
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: grype-offline-db
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: grype-offline-db
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: grype-offline-db
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            tier: ks-control-plane
        spec:
          affinity: null
          containers:
            - image: ghcr.io/alexandreroman/grype-offline-db@sha256:155db3be4baa461a50cebadfc8f52108fca71aa4ce5e460a30a4e0922e899ed2
              imagePullPolicy: IfNotPresent
              name: grype-offline-db
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                limits:
                  cpu: 150m
                  memory: 200Mi
                requests:
                  cpu: 150m
                  memory: 200Mi
              securityContext:
                allowPrivilegeEscalation: false
                runAsNonRoot: true
          nodeSelector: null
          tolerations: null
  16: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: grype-offline-db
        tier: ks-control-plane
      name: grype-offline-db
      namespace: kubescape
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: kubescape
                  app.kubernetes.io/name: kubevuln
                  tier: ks-control-plane
          ports:
            - port: 8080
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: grype-offline-db
          tier: ks-control-plane
      policyTypes:
        - Ingress
  17: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: grype-offline-db
        kubescape.io/ignore: "true"
      name: grype-offline-db
      namespace: kubescape
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: grype-offline-db
      type: ClusterIP
  18: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kollector
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - namespaces
          - cronjobs
          - secrets
          - nodes
          - services
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - watch
          - list
  19: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kollector
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kollector
    subjects:
      - kind: ServiceAccount
        name: kollector
        namespace: kubescape
  20: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: kollector
        tier: ks-control-plane
      name: kollector
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
        - ports:
            - port: 80
              protocol: TCP
          to:
            - ipBlock:
                cidr: 169.254.169.254/32
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kollector
          tier: ks-control-plane
      policyTypes:
        - Egress
  21: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: kollector
        kubescape.io/ignore: "true"
      name: kollector
      namespace: kubescape
  22: |
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      labels:
        app: kollector
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: kollector
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kollector
      namespace: kubescape
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kollector
          tier: ks-control-plane
      serviceName: ""
      template:
        metadata:
          annotations:
            checksum/cloud-config: c4dc912bbe62b0d5fd4734206c3cae52f56d766cbc20024182a2bcef09c0ae8e
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: kollector
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: kollector
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - args:
                - -alsologtostderr
                - -v=4
                - 2>&1
              env:
                - name: GOMEMLIMIT
                  value: 100MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/kollector:v0.1.36
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /v1/liveness
                  port: readiness-port
                initialDelaySeconds: 3
                periodSeconds: 3
              name: kollector
              ports:
                - containerPort: 8000
                  name: readiness-port
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /v1/readiness
                  port: readiness-port
                initialDelaySeconds: 10
                periodSeconds: 5
              resources:
                limits:
                  cpu: 500m
                  memory: 500Mi
                requests:
                  cpu: 10m
                  memory: 100Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 100
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
                - mountPath: /etc/ssl/certs/ca-certificates.crt
                  name: custom-ca-certificates
                  subPath: ca-certificates.crt
          nodeSelector: null
          serviceAccountName: kollector
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - name: custom-ca-certificates
              secret:
                secretName: custom-ca-certificates
            - emptyDir: {}
              name: tmp-dir
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
  23: |
    apiVersion: v1
    data:
      request-body.json: '{"commands":[{"CommandName":"kubescapeScan","args":{"scanV1": {}}}]}'
    kind: ConfigMap
    metadata:
      labels:
        app: kubescape-scheduler
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubescape-scheduler
      namespace: kubescape
  24: |
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      labels:
        app: kubescape-scheduler
        app.kubernetes.io/name: kubescape-scheduler
        armo.tier: kubescape-scan
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubescape-scheduler
      namespace: kubescape
    spec:
      failedJobsHistoryLimit: 1
      jobTemplate:
        spec:
          template:
            metadata:
              labels:
                app: kubescape-scheduler
                app.kubernetes.io/name: kubescape-scheduler
                armo.tier: kubescape-scan
                kubescape.io/tier: core
            spec:
              affinity: null
              automountServiceAccountToken: false
              containers:
                - args:
                    - -method=post
                    - -scheme=http
                    - -host=operator:4002
                    - -path=v1/triggerAction
                    - -headers=Content-Type:application/json
                    - -path-body=/home/ks/request-body.json
                  image: quay.io/kubescape/http-request:v0.2.6
                  imagePullPolicy: IfNotPresent
                  name: kubescape-scheduler
                  resources:
                    limits:
                      cpu: 10m
                      memory: 20Mi
                    requests:
                      cpu: 1m
                      memory: 10Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    readOnlyRootFilesystem: true
                    runAsNonRoot: true
                    runAsUser: 100
                  volumeMounts:
                    - mountPath: /home/ks/request-body.json
                      name: kubescape-scheduler
                      readOnly: true
                      subPath: request-body.json
              nodeSelector: null
              restartPolicy: Never
              tolerations: null
              volumes:
                - configMap:
                    name: kubescape-scheduler
                  name: kubescape-scheduler
      schedule: 1 2 3 4 5
      successfulJobsHistoryLimit: 3
  25: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - pods/proxy
          - namespaces
          - secrets
          - nodes
          - configmaps
          - services
          - serviceaccounts
          - endpoints
          - persistentvolumeclaims
          - persistentvolumes
          - limitranges
          - replicationcontrollers
          - podtemplates
          - resourcequotas
          - events
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - admissionregistration.k8s.io
        resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apiregistration.k8s.io
        resources:
          - apiservices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - controllerrevisions
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - autoscaling
        resources:
          - horizontalpodautoscalers
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - discovery.k8s.io
        resources:
          - endpointslices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - events.k8s.io
        resources:
          - events
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - hostdata.kubescape.cloud
        resources:
          - APIServerInfo
          - ControlPlaneInfo
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - networking.k8s.io
        resources:
          - networkpolicies
          - Ingress
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - policy
        resources:
          - poddisruptionbudgets
          - podsecuritypolicies
          - PodSecurityPolicy
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - clusterroles
          - clusterrolebindings
          - roles
          - rolebindings
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - storage.k8s.io
        resources:
          - csistoragecapacities
          - storageclasses
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - networking.k8s.io
        resources:
          - ingresses
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - extensions
        resources:
          - Ingress
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - gateway.networking.k8s.io
        resources:
          - httproutes
          - gateways
          - gatewayclasses
          - tcproutes
          - tlsroutes
          - udproutes
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - update
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - workloadconfigurationscans
          - workloadconfigurationscansummaries
        verbs:
          - create
          - update
          - patch
      - apiGroups:
          - kubescape.io
        resources:
          - serviceauthentication
        verbs:
          - get
          - watch
          - list
  26: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kubescape
    subjects:
      - kind: ServiceAccount
        name: kubescape
        namespace: kubescape
  27: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: kubescape
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: kubescape
        helm.sh/chart: kubescape-operator-1.18.16
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubescape
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kubescape
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/cloud-config: c4dc912bbe62b0d5fd4734206c3cae52f56d766cbc20024182a2bcef09c0ae8e
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/host-scanner-configmap: cb6c9f6c0baf504f7e8b4b5daf0c3a84cdf0cf21e3a098be67e57fdcd2db8ac9
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: kubescape
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: kubescape
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - command:
                - ksserver
              env:
                - name: GOMEMLIMIT
                  value: 400MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: KS_DOWNLOAD_ARTIFACTS
                  value: "true"
                - name: RULE_PROCESSING_GOMAXPROCS
                  value: ""
                - name: KS_DEFAULT_CONFIGMAP_NAME
                  value: kubescape-config
                - name: KS_DEFAULT_CONFIGMAP_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: KS_CONTEXT
                  value: kind-kind
                - name: KS_DEFAULT_CLOUD_CONFIGMAP_NAME
                  value: ks-cloud-config
                - name: KS_ENABLE_HOST_SCANNER
                  value: "true"
                - name: KS_SKIP_UPDATE_CHECK
                  value: "false"
                - name: KS_HOST_SCAN_YAML
                  value: /home/nonroot/.kubescape/host-scanner.yaml
                - name: LARGE_CLUSTER_SIZE
                  value: "1500"
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/kubescape:v3.0.11
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /livez
                  port: 8080
                initialDelaySeconds: 3
                periodSeconds: 3
              name: kubescape
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8080
                initialDelaySeconds: 3
                periodSeconds: 3
              resources:
                limits:
                  cpu: 600m
                  memory: 1Gi
                requests:
                  cpu: 250m
                  memory: 400Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /home/nonroot/.kubescape
                  name: kubescape-volume
                  subPath: config.json
                - mountPath: /home/nonroot/.kubescape/host-scanner.yaml
                  name: host-scanner-definition
                  subPath: host-scanner-yaml
                - mountPath: /home/nonroot/results
                  name: results
                - mountPath: /home/nonroot/failed
                  name: failed
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
                - mountPath: /etc/ssl/certs/ca-certificates.crt
                  name: custom-ca-certificates
                  subPath: ca-certificates.crt
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: kubescape
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - name: custom-ca-certificates
              secret:
                secretName: custom-ca-certificates
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
            - configMap:
                name: host-scanner-definition
              name: host-scanner-definition
            - emptyDir: {}
              name: kubescape-volume
            - emptyDir: {}
              name: results
            - emptyDir: {}
              name: failed
  28: |
    apiVersion: v1
    data:
      host-scanner-yaml: |-
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          name: host-scanner
          namespace: kubescape
          labels:
            app: host-scanner
            k8s-app: kubescape-host-scanner
        spec:
          selector:
            matchLabels:
              name: host-scanner
          template:
            metadata:
              labels:
                kubescape.io/ignore: "true"
                kubescape.io/tier: "core"
                name: host-scanner
                otel: enabled
            spec:
              nodeSelector:
              affinity:
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/control-plane
                  operator: Exists
                - effect: NoSchedule
                  key: node-role.kubernetes.io/master
                  operator: Exists
              containers:
              - name: host-sensor
                image: "quay.io/kubescape/host-scanner:v1.0.66"
                imagePullPolicy: IfNotPresent
                securityContext:
                  allowPrivilegeEscalation: true
                  privileged: true
                  readOnlyRootFilesystem: true
                  procMount: Unmasked
                env:
                - name: KS_LOGGER_LEVEL
                  value: "info"
                - name: KS_LOGGER_NAME
                  value: "zap"
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      name: cloud-secret
                      key: account
                - name: CLUSTER_NAME
                  value: "kind-kind"
                - name: OTEL_COLLECTOR_SVC
                  value: "otel-collector.kubescape.svc:4317"
                ports:
                  - name: scanner # Do not change port name
                    containerPort: 7888
                    protocol: TCP
                resources:
                  limits:
                    cpu: 0.4m
                    memory: 400Mi
                  requests:
                    cpu: 0.1m
                    memory: 200Mi
                volumeMounts:
                - mountPath: /host_fs
                  name: host-filesystem
                startupProbe:
                  httpGet:
                    path: /readyz
                    port: 7888
                  failureThreshold: 30
                  periodSeconds: 1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 7888
                  periodSeconds: 10
              terminationGracePeriodSeconds: 120
              dnsPolicy: ClusterFirstWithHostNet
              automountServiceAccountToken: false
              volumes:
              - hostPath:
                  path: /
                  type: Directory
                name: host-filesystem
              hostPID: true
              hostIPC: true
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: host-scanner-definition
      namespace: kubescape
  29: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: kubescape
        helm.sh/chart: kubescape-operator-1.18.16
        tier: ks-control-plane
      name: kubescape
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: kubescape
                  app.kubernetes.io/name: operator
                  tier: ks-control-plane
          ports:
            - port: http
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kubescape
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  30: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
    rules:
      - apiGroups:
          - apps
        resources:
          - daemonsets
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
          - delete
  31: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: kubescape
    subjects:
      - kind: ServiceAccount
        name: kubescape
        namespace: kubescape
  32: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: kubescape
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
    spec:
      ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: kubescape
      type: ClusterIP
  33: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: kubescape
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
  34: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app: kubescape
        kubescape.io/ignore: "true"
      name: kubescape-monitor
      namespace: kubescape
    spec:
      endpoints:
        - interval: 200s
          path: /v1/metrics
          port: http
          scrapeTimeout: 150s
      namespaceSelector:
        matchNames:
          - kubescape
      selector:
        matchLabels:
          app: kubescape
  35: |
    apiVersion: v1
    data:
      request-body.json: '{"commands":[{"commandName":"scan","designators":[{"designatorType":"Attributes","attributes":{}}]}]}'
    kind: ConfigMap
    metadata:
      labels:
        app: kubevuln-scheduler
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubevuln-scheduler
      namespace: kubescape
  36: |
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      labels:
        app: kubevuln-scheduler
        app.kubernetes.io/name: kubevuln-scheduler
        armo.tier: vuln-scan
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubevuln-scheduler
      namespace: kubescape
    spec:
      failedJobsHistoryLimit: 1
      jobTemplate:
        spec:
          template:
            metadata:
              labels:
                app: kubevuln-scheduler
                app.kubernetes.io/name: kubevuln-scheduler
                armo.tier: vuln-scan
                kubescape.io/tier: core
            spec:
              affinity: null
              automountServiceAccountToken: false
              containers:
                - args:
                    - -method=post
                    - -scheme=http
                    - -host=operator:4002
                    - -path=v1/triggerAction
                    - -headers=Content-Type:application/json
                    - -path-body=/home/ks/request-body.json
                  image: quay.io/kubescape/http-request:v0.2.6
                  imagePullPolicy: IfNotPresent
                  name: kubevuln-scheduler
                  resources:
                    limits:
                      cpu: 10m
                      memory: 20Mi
                    requests:
                      cpu: 1m
                      memory: 10Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    readOnlyRootFilesystem: true
                    runAsNonRoot: true
                    runAsUser: 100
                  volumeMounts:
                    - mountPath: /home/ks/request-body.json
                      name: kubevuln-scheduler
                      readOnly: true
                      subPath: request-body.json
              nodeSelector: null
              restartPolicy: Never
              tolerations: null
              volumes:
                - configMap:
                    name: kubevuln-scheduler
                  name: kubevuln-scheduler
      schedule: 1 2 3 4 5
      successfulJobsHistoryLimit: 3
  37: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubevuln
    rules:
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - vulnerabilitymanifests
          - vulnerabilitymanifestsummaries
          - openvulnerabilityexchangecontainers
          - sbomsyfts
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - sbomsyftfiltereds
        verbs:
          - get
          - watch
          - list
  38: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubevuln
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kubevuln
    subjects:
      - kind: ServiceAccount
        name: kubevuln
        namespace: kubescape
  39: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: kubevuln
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: kubevuln
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubevuln
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kubevuln
          tier: ks-control-plane
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            checksum/cloud-config: c4dc912bbe62b0d5fd4734206c3cae52f56d766cbc20024182a2bcef09c0ae8e
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: kubevuln
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: kubevuln
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - args:
                - -alsologtostderr
                - -v=4
                - 2>&1
              env:
                - name: GOMEMLIMIT
                  value: 1000MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: PRINT_POST_JSON
                  value: ""
                - name: CA_MAX_VULN_SCAN_ROUTINES
                  value: "1"
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/kubevuln:v0.3.25
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /v1/liveness
                  port: 8080
                initialDelaySeconds: 3
                periodSeconds: 3
              name: kubevuln
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /v1/readiness
                  port: 8080
              resources:
                limits:
                  cpu: 1500m
                  ephemeral-storage: 10Gi
                  memory: 5000Mi
                requests:
                  cpu: 300m
                  ephemeral-storage: 5Gi
                  memory: 1000Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /home/nonroot/anchore-resources/db
                  name: grype-db-cache
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
                - mountPath: /home/nonroot/.cache/grype
                  name: grype-db
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
                - mountPath: /etc/ssl/certs/ca-certificates.crt
                  name: custom-ca-certificates
                  subPath: ca-certificates.crt
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: kubevuln
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - name: custom-ca-certificates
              secret:
                secretName: custom-ca-certificates
            - emptyDir: {}
              name: tmp-dir
            - emptyDir: {}
              name: grype-db-cache
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
            - emptyDir: {}
              name: grype-db
  40: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: kubevuln
        tier: ks-control-plane
      name: kubevuln
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: kubescape
                  app.kubernetes.io/name: operator
                  tier: ks-control-plane
          ports:
            - port: 8080
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kubevuln
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  41: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: kubevuln
        kubescape.io/ignore: "true"
      name: kubevuln
      namespace: kubescape
    spec:
      ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: kubevuln
      type: ClusterIP
  42: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: kubevuln
        kubescape.io/ignore: "true"
      name: kubevuln
      namespace: kubescape
  43: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: node-agent
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - nodes
          - services
          - endpoints
          - namespaces
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - deployments
          - daemonsets
          - statefulsets
          - replicasets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - sbomsyfts
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - applicationactivities
          - applicationprofiles
          - networkneighborses
          - networkneighborhoods
          - sbomsyftfiltereds
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
      - apiGroups:
          - kubescape.io
        resources:
          - runtimerulealertbindings
        verbs:
          - list
          - watch
  44: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: node-agent
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: node-agent
    subjects:
      - kind: ServiceAccount
        name: node-agent
        namespace: kubescape
  45: |
    apiVersion: v1
    data:
      config.json: |
        {
            "applicationProfileServiceEnabled": true,
            "relevantCVEServiceEnabled": true,
            "prometheusExporterEnabled": false,
            "runtimeDetectionEnabled": true,
            "networkServiceEnabled": true,
            "malwareDetectionEnabled": true,
            "nodeProfileServiceEnabled": true,
            "initialDelay": "2m",
            "updateDataPeriod": "10m",
            "nodeProfileInterval": "10m",
            "maxSniffingTimePerContainer": "24h",
            "exporters": {
              "httpExporterConfig":{"maxAlertsPerMinute":1000,"method":"POST","url":"http://synchronizer:8089/apis/v1/kubescape.io"},
              "alertManagerExporterUrls":[],
              "stdoutExporter":true,
              "syslogExporterURL": ""
            }
        }
    kind: ConfigMap
    metadata:
      labels:
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
      name: node-agent
      namespace: kubescape
  46: |
    apiVersion: v1
    data:
      clamd.conf: |-
        Foreground yes
        User root
        Debug no
        LeaveTemporaryFiles no
        LogTime yes
        LogClean yes
        LocalSocket /run/clamav/clamd.sock
        LocalSocketGroup clamav
        LocalSocketMode 660
        MaxDirectoryRecursion 20
        ExtendedDetectionInfo yes
      freshclam.conf: |-
        Foreground yes
        DatabaseDirectory /var/lib/clamav
        UpdateLogFile /dev/stdout
        Debug no
        LogFileMaxSize 0
        LogTime yes
        DatabaseOwner root
        DNSDatabaseInfo current.cvd.clamav.net
        DatabaseMirror database.clamav.net
        MaxAttempts 3
        ScriptedUpdates no
        CompressLocalDatabase no
        TestDatabases yes
        Checks 0
        ConnectTimeout 30
        ReceiveTimeout 60
    kind: ConfigMap
    metadata:
      name: clamav
      namespace: kubescape
  47: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        app: node-agent
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: node-agent
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: node-agent
      namespace: kubescape
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: node-agent
          tier: ks-control-plane
      template:
        metadata:
          annotations:
            checksum/cloud-config: c4dc912bbe62b0d5fd4734206c3cae52f56d766cbc20024182a2bcef09c0ae8e
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/node-agent-config: 9364a39e3684fb9d8972733a7d1cfdec0b821d7f04a824e52bdb45551474feeb
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
            container.apparmor.security.beta.kubernetes.io/node-agent: unconfined
          labels:
            alt-name: node-agent
            app: node-agent
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: node-agent
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
          automountServiceAccountToken: true
          containers:
            - image: quay.io/kubescape/klamav:1.3.1-34_base
              imagePullPolicy: IfNotPresent
              name: clamav
              resources:
                limits:
                  cpu: 300m
                  memory: 512Mi
                requests:
                  cpu: 100m
                  memory: 256Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_PTRACE
                runAsUser: 0
              volumeMounts:
                - mountPath: /var/lib/clamav-tmp
                  name: clamdb
                  readOnly: false
                - mountPath: /run/clamav
                  name: clamrun
                  readOnly: false
                - mountPath: /etc/clamav
                  name: etc
                  readOnly: true
            - env:
                - name: GOMEMLIMIT
                  value: 600MiB
                - name: HOST_ROOT
                  value: /host
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4318
                - name: CLAMAV_SOCKET
                  value: /clamav/clamd.sock
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: NAMESPACE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: NodeName
              image: quay.io/kubescape/node-agent:v0.2.81
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /livez
                  port: 7888
                initialDelaySeconds: 3
                periodSeconds: 3
              name: node-agent
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 7888
                initialDelaySeconds: 3
                periodSeconds: 3
              resources:
                limits:
                  cpu: 500m
                  memory: 700Mi
                requests:
                  cpu: 100m
                  memory: 180Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_PTRACE
                    - NET_ADMIN
                    - SYSLOG
                    - SYS_RESOURCE
                    - IPC_LOCK
                    - NET_RAW
                privileged: false
                runAsUser: 0
                seLinuxOptions:
                  type: spc_t
              volumeMounts:
                - mountPath: /host
                  name: host
                - mountPath: /run
                  name: run
                - mountPath: /lib/modules
                  name: modules
                - mountPath: /sys/kernel/debug
                  name: debugfs
                - mountPath: /sys/fs/cgroup
                  name: cgroup
                - mountPath: /sys/fs/bpf
                  name: bpffs
                - mountPath: /data
                  name: data
                - mountPath: /clamav
                  name: clamrun
                  readOnly: false
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /etc/config/clusterData.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: clusterData.json
                - mountPath: /etc/config/config.json
                  name: config
                  readOnly: true
                  subPath: config.json
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
                - mountPath: /etc/ssl/certs/ca-certificates.crt
                  name: custom-ca-certificates
                  subPath: ca-certificates.crt
          hostPID: true
          nodeSelector:
            kubernetes.io/os: linux
          priorityClassName: kubescape-critical
          serviceAccountName: node-agent
          tolerations: null
          volumes:
            - hostPath:
                path: /
              name: host
            - hostPath:
                path: /run
              name: run
            - hostPath:
                path: /sys/fs/cgroup
              name: cgroup
            - hostPath:
                path: /lib/modules
              name: modules
            - hostPath:
                path: /sys/fs/bpf
              name: bpffs
            - hostPath:
                path: /sys/kernel/debug
              name: debugfs
            - emptyDir: null
              name: data
            - emptyDir: {}
              name: clamdb
            - emptyDir: {}
              name: clamrun
            - configMap:
                items:
                  - key: clamd.conf
                    path: clamd.conf
                  - key: freshclam.conf
                    path: freshclam.conf
                name: clamav
              name: etc
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
            - configMap:
                items:
                  - key: config.json
                    path: config.json
                name: node-agent
              name: config
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - name: custom-ca-certificates
              secret:
                secretName: custom-ca-certificates
  48: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: node-agent
        app.kubernetes.io/name: node-agent
        kubescape.io/ignore: "true"
      name: node-agent
      namespace: kubescape
    spec:
      ports:
        - name: prometheus
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app.kubernetes.io/name: node-agent
  49: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: node-agent
      namespace: kubescape
  50: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: operator
        kubescape.io/ignore: "true"
      name: kubescape-admission-webhook
      namespace: kubescape
    spec:
      ports:
        - port: 443
          targetPort: 8443
      selector:
        app: operator
      type: ClusterIP
  51: |
    apiVersion: v1
    data:
      tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjVENDQWxtZ0F3SUJBZ0lSQU4wS0JCRVV3V3huMDRERE54dGlyanN3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQXd3UEtpNU9RVTFGVTFCQlEwVXVjM1pqTUI0WERUSTBNRFl4T1RBNE16a3dOMW9YRFRJMwpNRFF3T1RBNE16a3dOMW93TkRFeU1EQUdBMVVFQXhNcGEzVmlaWE5qWVhCbExXRmtiV2x6YzJsdmJpMTNaV0pvCmIyOXJMazVCVFVWVFVFRkRSUzV6ZG1Nd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFDc2MvUitoNGFkRmU3MHM4WldpYnRDczBwcmQwUmxkMHpvNVhhV3JiMExwd2VVWGovOHoyV3dyZnpybGtqVApnRm5NTktlWGhzREozZzd5WWw0T2dOYVZidmUzWnNMbHl5QW1zYi83NGI1QzgzZENWeWY4dzg0a1U4Q1RNWGZNCkFQRzUvMjVHNEJSWmQrWjc0aTJPZDBWaFFTRG5LQkZKczVadFBrcUVXWmQ5NnRaNGpxMnprMk1EdHRBS0pYb1kKOVFUUWNzOVJsa1BYSGNBVElObG5jTUJTTjV3QjJudW90ZS92cUtIZzBTcWUvNy9ZTnMwdHNDS0lBQnNsVXcxTwpZZTlvbzFqTFVLRno5cTAxdWtnYmw3WmpoeTV2S0VRcnlZMUdodFY5NVdQV292dTUrNG56UldMTVBxNEk2RTdiCjIrcHJHOE5uUVQzY1BiYzFOT3VIdnpvTkFnTUJBQUdqZ1pjd2daUXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEcKQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZApJd1FZTUJhQUZNUVJidm5qZlAxdVFHMFlxQnNZWkhXbklvTHhNRFFHQTFVZEVRUXRNQ3VDS1d0MVltVnpZMkZ3ClpTMWhaRzFwYzNOcGIyNHRkMlZpYUc5dmF5NU9RVTFGVTFCQlEwVXVjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQUZEZHdoMHJUK0ZSOVFvMEZDcWxncWRCZzlici9vS1praWFYeTJ0RGtpeUtIeFY1a3FHaWZDWURDRAozWXhZdndjOHZsRkhlcEE1OHVYMk5LVlR1QlZaQitGcnhSS1BvZzgxLy94bHQvOHI4OEZjM0Rqano4YXc0UU9oCmdlMXJaTWpYV1Y5dGRTR09xcStCWDFoZjJsZEUyVGxsMzdaZmJrRVZ4d24vSjVQUzlpUDBZMWdNbkZKUStVUDcKTlZESXhjc2F3WlNGeDRvbTlMVk92bTBRM0tISWtDQUhvM241dlpjZXI3eUtUUVNsVyt1RGNJQmovQzhGMjAyVgpYaTR6d3VGVEdJUEZCdm1DaFZxdGRVQTNnZWdMMlFZU0ZuQXBMc0J2RW4wUktUUUJHUkNLT21PTkVKeWluTmVFCjRkaWpLNm5nVmxLL1NKQmdaY2R0ck15TEZjMkMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBckhQMGZvZUduUlh1OUxQR1ZvbTdRck5LYTNkRVpYZE02T1YybHEyOUM2Y0hsRjQvCi9NOWxzSzM4NjVaSTA0Qlp6RFNubDRiQXlkNE84bUplRG9EV2xXNzN0MmJDNWNzZ0pyRy8rK0crUXZOM1FsY24KL01QT0pGUEFrekYzekFEeHVmOXVSdUFVV1hmbWUrSXRqbmRGWVVFZzV5Z1JTYk9XYlQ1S2hGbVhmZXJXZUk2dApzNU5qQTdiUUNpVjZHUFVFMEhMUFVaWkQxeDNBRXlEWlozREFVamVjQWRwN3FMWHY3NmloNE5FcW52Ky8yRGJOCkxiQWlpQUFiSlZNTlRtSHZhS05ZeTFDaGMvYXROYnBJRzVlMlk0Y3VieWhFSzhtTlJvYlZmZVZqMXFMN3VmdUoKODBWaXpENnVDT2hPMjl2cWF4dkRaMEU5M0QyM05UVHJoNzg2RFFJREFRQUJBb0lCQUFIeWZUeEFnNENha3N3bwppNERHcFZxbmM1dXJDUmFzTmk0YkNTL0NYblFYT3JxdUpjTFJCTER1QmdFUy9WZUdCMzJLeXFtblY5M3ZwL09NCnNNc3hJVHNtdVoxVWg3YllpRkJuaVdkcXNSOUlhSHhUUjV4UENiRFhVVUZZT2FZUURLcXcrNm5KTmZHY3JQbVIKSURxUGxqVDI2MHd3NDZFVmFnbHB2cVduN1ZINnBCbU1CQlFCVHYrSzZ5alF5Q3lqMUZVaEhVMzVNbFkxeDE1Mgo5YnUyVmo3UE5DS1lVK3MwVHdRVE5LdjRjTkxPNFRaTmlvNXZlS25XSzlvRW1sRTIzcHdrV2pFM0J2blh5cS9UCkkydU9MWEtwMGh0L1J4by9mck1xdS95M2RVSHhTMmNLVno5U2s0MU1sd1pLSVFNWHlKNE5WWVBhY2J6YVQ4cjYKRXJCYThRRUNnWUVBeVpRMmhXaGxwVGRlNU9CdjhsZnRtSTlCMVVuNm1oT05PZE11K0I2a04rK25WQmZUSllENApodDRqRHkyNjhYYjlUZU54YWg4STJkRUkxSDRKT014OVhNNHM5cTIvVXZLZG5tZUFKRmZxMkhjb1FiTXJnWUdtCktiK2pPSUtVaTUzTW1TK1piNmo4b1Y0a3g1cW43Y25vQ3RKR054ckZsdEJpdUgzdWhPeGVEUEVDZ1lFQTJ3Sy8KWVFXQ2Z6dkVUWURvWTBpamREbkZsVlE4RXlNQmNzcm12Y1B1Y3p0US9mT09FK1U5VlpBUHNXMkRSSHlGNWNqcgoxZXRiZk5pVWNYdzc0RlV6Z2xjRUd3QVdGWGdXYy9SWGRkd0gyWHNuVG9ic283R0syRHBJN0F3YzlpNUVuMCtwClJKeXVLVUhGWUpkZHJpT3FvaE5RMnNPQW95TmMyT2h5R3dybTd0MENnWUFTVjB6NnFId1BJMUdjQzV2RDlpSWwKTG11MEIyNG8xTHlWMVZSQnVUQUI4dWxMcW50SXYwcGRveHFYaC9hcGY4VWVjQ0ppb0g1Q3ExVmRXRFpvbDVxVQpkaUg3TStYam16V2lNeEtpdStrZlZ3QXZzaWkwT09Ld2k4SkRJd1ozQ1oyVEZwU2taMEROUWU2Z3hyNmUwUzh1CnhPRWtwR2YwQi9QamkzbkhXR1phVVFLQmdRQ3JtQmVDV09MSjlYWDBrNCtBV3FWV3B2MGI1d2U2cHE2MzFpbTcKZlF3UzFPSzhWbHQzVXlFZkxPUmV5OE1Sb2M3M0h0bElua0xzS25VRUJhYVVPYTFGN2crVmFCZmxjbFdGUEdoYQpPNjhhd3RjbE82bWxCN0lWZ0hVcUhNT0VUdlFOTGtrZExQVjM5Y1JEemRUa1g2V05uenkyYW44YlV0V29UVmM1CndPejNNUUtCZ0hsbTNOK2NxQlBITXkrSFY4dXdmNG5vbEczYWluVFh4WFlOc1BmTURDRUxPSHFYRktqVGZ4WlAKV1pUY2pvSlBJRUFaUmVTb2grc1NTbWx5TWNURDY3UWdRdmltYTlnMExVanhDUXo0VmpHbzhMN2VqSzhGWnJaWgpvYWl2UHlaSFFkdXVvbk9uTEY0b0hEU1pyQ0ZaNTZ3RmhHKzdOSHlDcnFUMXowZlUxMmV2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
    kind: Secret
    metadata:
      name: kubescape-admission-webhook.NAMESPACE.svc-kubescape-tls-pair
      namespace: kubescape
    type: kubernetes.io/tls
  52: |
    apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingWebhookConfiguration
    metadata:
      name: validation
    webhooks:
      - admissionReviewVersions:
          - v1
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJRENDQWdpZ0F3SUJBZ0lSQUlHcTgwWmNEd1NGQ1VSRnZ6bUpEUGN3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQXd3UEtpNU9RVTFGVTFCQlEwVXVjM1pqTUI0WERUSTBNRFl4T1RBNE16a3dOMW9YRFRJMwpNRFF3T1RBNE16a3dOMW93R2pFWU1CWUdBMVVFQXd3UEtpNU9RVTFGVTFCQlEwVXVjM1pqTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBc0JOSWkveldhWWltNzZFNWhBT3UwTEpBNHRtWjF2RzEKcnJib29aVzlsRXNwTEMzSHFXbEMwdEtMQmM1TjYzTVF4QU5kSkQ2TmliQUJEVHlleGFwa0xjanROMVREVnZZdApPSWtKdjRjSFR3REo0a3Q2N05aREpZZHBYL1lMcUk3ZjVRYzR1R0Rmemh5K1lRQXNDS2poL1J0ZW1URUJYTUdGClYzbmt3UFJIaWJxRVJOMXNpNHVMN0ZxR2l2SnE2YUFJNmJKNEtBQzZoQUJvVG93bHorQWY0UW5HaHJMMTJhbGoKTG15QitxQTQxcndWWUtRSjBsNlNOdjREYUQ2Wm5FWUpvV0hucUtrMmlZdzVFSVdQVjcxT0lrclVsOWI2TGU2Nwp4WG5COGFMbW1jdFFtUFJDRnh0bm9KUXR6UDc5VEhHWFdZNDBYYVh3YWJqSG5Ja3hRbDd3aVFJREFRQUJvMkV3Clh6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk1RUmJ2bmpmUDF1UUcwWXFCc1laSFduSW9MeApNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUIrVVJnTE1wQzhpdnJmK1Q4RGxpWjB6VnBYblc4MmFIS1B0ZDlmCitaZGp2Q0FYeUFYZ0tyN0RBelFPbU4vWlF6S2Q0aVlwTEJwMkRiRFhxT3lNTHpWOGVHOWRONUlyMldhZ1ZlQWgKRlpGM0hJdE5wajdOeEQwWjJnZmptZXUvY3hVOTg3RzdqNFIvbitaZ2pEREc0YWhrakszKytsOHVBUWQ2YlRWdgp3TlVmSSticjY2cFg0bFhENUFOZUMzMnNkS2cxUXJwUlhneTlyYU14R2tyZDRtU0FqZGEvN2l3TS9BRTVhVjZnCnhKc1RzT2VWSkRkLzNIcXdrYzBCREl0dlRQbTZBQXVoWkgyV0s1amVyOFNjM3ZzTHRuUEFrVXc4SUdNNXMyV0wKQWdEazlTWG5zazZnZ3hFZldwd2tqTGdlZTNEb1B3N3Jub2NJV1dlUVdRYlJGZGxHCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          service:
            name: kubescape-admission-webhook
            namespace: kubescape
            path: /validate
            port: 443
        failurePolicy: Ignore
        name: validation.kubescape.admission
        rules:
          - apiGroups:
              - '*'
            apiVersions:
              - v1
            operations:
              - CREATE
              - UPDATE
              - DELETE
              - CONNECT
            resources:
              - pods
              - pods/exec
              - pods/portforward
              - pods/attach
              - clusterrolebindings
              - rolebindings
            scope: '*'
        sideEffects: None
  53: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - nodes
          - namespaces
          - configmaps
          - secrets
          - services
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - deployments
          - daemonsets
          - statefulsets
          - replicasets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - vulnerabilitymanifests
          - vulnerabilitymanifestsummaries
          - workloadconfigurationscans
          - workloadconfigurationscansummaries
          - openvulnerabilityexchangecontainers
          - sbomsyftfiltereds
          - sbomsyfts
        verbs:
          - get
          - watch
          - list
          - delete
      - apiGroups:
          - kubescape.io
        resources:
          - serviceauthentication
        verbs:
          - get
          - watch
          - list
          - create
          - update
          - delete
  54: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: operator
    subjects:
      - kind: ServiceAccount
        name: operator
        namespace: kubescape
  55: |
    apiVersion: v1
    data:
      config.json: |
        {
            "namespace": "kubescape",
            "triggersecurityframework": true,
            "httpExporterConfig":{"maxAlertsPerMinute":1000,"method":"POST","url":"http://synchronizer:8089/apis/v1/kubescape.io"}
        }
    kind: ConfigMap
    metadata:
      labels:
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
      name: operator
      namespace: kubescape
  56: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: operator
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: operator
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: operator
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: operator
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/capabilities-config: 56fe74200524e2eed94c4a830bfb64699188db00943fc6a1a9415e40066211f8
            checksum/cloud-config: c4dc912bbe62b0d5fd4734206c3cae52f56d766cbc20024182a2bcef09c0ae8e
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/matching-rules-config: 9282b3916f506ac98eccbdfe686271420ff520374de611f7efce8235dcdf8809
            checksum/operator-config: 13ee93fac3da2973afa49f148b1538ee1f29c6a7a720a3a4a6f2de8997cb6f20
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: operator
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: operator
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - args:
                - -alsologtostderr
                - -v=4
                - 2>&1
              env:
                - name: HELM_RELEASE
                  value: kubescape-operator-1.18.16
                - name: GOMEMLIMIT
                  value: 100MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/operator:v0.2.13
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /v1/liveness
                  port: readiness-port
                initialDelaySeconds: 3
                periodSeconds: 3
              name: operator
              ports:
                - containerPort: 4002
                  name: trigger-port
                  protocol: TCP
                - containerPort: 8000
                  name: readiness-port
                  protocol: TCP
                - containerPort: 8443
                  name: admission-port
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /v1/readiness
                  port: readiness-port
                initialDelaySeconds: 10
                periodSeconds: 5
              resources:
                limits:
                  cpu: 300m
                  memory: 300Mi
                requests:
                  cpu: 50m
                  memory: 100Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /etc/config/clusterData.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: clusterData.json
                - mountPath: /etc/config/services.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: services.json
                - mountPath: /etc/config/capabilities.json
                  name: ks-capabilities
                  readOnly: true
                  subPath: capabilities.json
                - mountPath: /etc/config/matchingRules.json
                  name: cs-matching-rules
                  readOnly: true
                  subPath: matchingRules.json
                - mountPath: /etc/config/config.json
                  name: config
                  readOnly: true
                  subPath: config.json
                - mountPath: /etc/ssl/certs/ca-certificates.crt
                  name: custom-ca-certificates
                  subPath: ca-certificates.crt
                - mountPath: /etc/certs
                  name: tls-certs
                  readOnly: true
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: operator
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - name: custom-ca-certificates
              secret:
                secretName: custom-ca-certificates
            - name: tls-certs
              secret:
                secretName: kubescape-admission-webhook.kubescape.svc-kubescape-tls-pair
            - emptyDir: {}
              name: tmp-dir
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
            - configMap:
                items:
                  - key: capabilities
                    path: capabilities.json
                name: ks-capabilities
              name: ks-capabilities
            - configMap:
                items:
                  - key: config.json
                    path: config.json
                name: operator
              name: config
            - configMap:
                items:
                  - key: matchingRules.json
                    path: matchingRules.json
                name: cs-matching-rules
              name: cs-matching-rules
  57: |
    apiVersion: v1
    data:
      cronjobTemplate: "apiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: kubescape-scheduler\n  namespace: kubescape\n  labels:\n    app: kubescape-scheduler\n    tier: ks-control-plane\n    kubescape.io/ignore: \"true\"\n    kubescape.io/tier: \"core\"\n    armo.tier: \"kubescape-scan\"\nspec:\n  schedule: \"1 2 3 4 5\"\n  successfulJobsHistoryLimit: 3\n  failedJobsHistoryLimit: 1\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          labels:\n            armo.tier: \"kubescape-scan\"\n            kubescape.io/tier: \"core\"\n        spec:\n          containers:\n          - name: kubescape-scheduler\n            image: \"quay.io/kubescape/http-request:v0.2.6\"\n            imagePullPolicy: IfNotPresent\n            securityContext:\n              allowPrivilegeEscalation: false\n              readOnlyRootFilesystem: true\n              runAsNonRoot: true\n              runAsUser: 100\n            resources:\n              limits:\n                cpu: 10m\n                memory: 20Mi\n              requests:\n                cpu: 1m\n                memory: 10Mi\n            args: \n              - -method=post\n              - -scheme=http\n              - -host=operator:4002\n              - -path=v1/triggerAction\n              - -headers=Content-Type:application/json\n              - -path-body=/home/ks/request-body.json\n            volumeMounts:\n              - name: \"request-body-volume\"\n                mountPath: /home/ks/request-body.json\n                subPath: request-body.json\n                readOnly: true\n          restartPolicy: Never\n          automountServiceAccountToken: false\n          nodeSelector:\n          affinity:\n          tolerations:\n          volumes:\n            - name: \"request-body-volume\" # placeholder\n              configMap:\n                name: kubescape-scheduler"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubescape-cronjob-template
      namespace: kubescape
  58: |
    apiVersion: v1
    data:
      cronjobTemplate: "apiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: kubevuln-scheduler\n  namespace: kubescape\n  labels:\n    app: kubevuln-scheduler\n    kubescape.io/ignore: \"true\"\n    kubescape.io/tier: \"core\"\n    tier: ks-control-plane\n    armo.tier: \"vuln-scan\"\nspec:\n  schedule: \"1 2 3 4 5\" \n  successfulJobsHistoryLimit: 3\n  failedJobsHistoryLimit: 1\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          labels:\n            armo.tier: \"vuln-scan\"\n            kubescape.io/tier: \"core\"\n        spec:\n          containers:\n          - name: kubevuln-scheduler\n            image: \"quay.io/kubescape/http-request:v0.2.6\"\n            imagePullPolicy: IfNotPresent\n            securityContext:\n              allowPrivilegeEscalation: false\n              readOnlyRootFilesystem: true\n              runAsNonRoot: true\n              runAsUser: 100\n            resources:\n              limits:\n                cpu: 10m\n                memory: 20Mi\n              requests:\n                cpu: 1m\n                memory: 10Mi\n            args: \n              - -method=post\n              - -scheme=http\n              - -host=operator:4002\n              - -path=v1/triggerAction\n              - -headers=Content-Type:application/json\n              - -path-body=/home/ks/request-body.json\n            volumeMounts:\n              - name: \"request-body-volume\"\n                mountPath: /home/ks/request-body.json\n                subPath: request-body.json\n                readOnly: true\n          restartPolicy: Never\n          automountServiceAccountToken: false\n          nodeSelector:\n          affinity:\n          tolerations:\n          volumes:\n            - name: \"request-body-volume\" # placeholder\n              configMap:\n                name: kubevuln-scheduler"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubevuln-cronjob-template
      namespace: kubescape
  59: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: operator
        tier: ks-control-plane
      name: operator
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
        - ports:
            - port: 80
              protocol: TCP
          to:
            - ipBlock:
                cidr: 169.254.169.254/32
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  armo.tier: kubescape-scan
            - podSelector:
                matchLabels:
                  armo.tier: vuln-scan
          ports:
            - port: trigger-port
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: operator
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  60: |
    apiVersion: v1
    data:
      cronjobTemplate: "apiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: registry-scheduler\n  namespace: kubescape\n  labels:\n    app: registry-scheduler\n    kubescape.io/ignore: \"true\"\n    kubescape.io/tier: \"core\"\n    tier: ks-control-plane\n    armo.tier: \"registry-scan\"\nspec:\n  schedule: \"0 0 * * *\"\n  successfulJobsHistoryLimit: 3\n  failedJobsHistoryLimit: 1\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          labels:\n            armo.tier: \"registry-scan\"\n            kubescape.io/tier: \"core\"\n        spec:\n          containers:\n          - name: registry-scheduler\n            image: \"quay.io/kubescape/http-request:v0.2.6\"\n            imagePullPolicy: IfNotPresent\n            securityContext:\n              allowPrivilegeEscalation: false\n              readOnlyRootFilesystem: true\n              runAsNonRoot: true\n              runAsUser: 100\n            resources:\n              limits:\n                cpu: 10m\n                memory: 20Mi\n              requests:\n                cpu: 1m\n                memory: 10Mi\n            args: \n              - -method=post\n              - -scheme=http\n              - -host=operator:4002\n              - -path=v1/triggerAction\n              - -headers=Content-Type:application/json\n              - -path-body=/home/ks/request-body.json\n            volumeMounts:\n              - name: \"request-body-volume\"\n                mountPath: /home/ks/request-body.json\n                subPath: request-body.json\n                readOnly: true\n          restartPolicy: Never\n          automountServiceAccountToken: false\n          nodeSelector:\n          affinity:\n          tolerations:\n          volumes:\n            - name: \"request-body-volume\" # placeholder\n              configMap:\n                name: registry-scheduler"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: registry-scan-cronjob-template
      namespace: kubescape
  61: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
          - secrets
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
          - delete
      - apiGroups:
          - batch
        resources:
          - cronjobs
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
          - delete
  62: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: operator
    subjects:
      - kind: ServiceAccount
        name: operator
        namespace: kubescape
  63: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: operator
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
    spec:
      ports:
        - port: 4002
          protocol: TCP
          targetPort: 4002
      selector:
        app: operator
      type: ClusterIP
  64: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: operator
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
  65: |
    apiVersion: v1
    data:
      otel-collector-config.yaml: "\n# receivers configure how data gets into the Collector.\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n  hostmetrics:\n    collection_interval: 30s\n    scrapers:\n      cpu:\n      memory:\n\n# processors specify what happens with the received data.\nprocessors:\n  attributes/ksCloud:\n    actions:\n      - key: account_id\n        value: \"9e6c0c2c-6bd0-4919-815b-55030de7c9a0\"\n        action: upsert\n      - key: cluster_name\n        value: \"kind-kind\"\n        action: upsert\n  batch:\n    send_batch_size: 10000\n    timeout: 10s\n\n# exporters configure how to send processed data to one or more backends.\nexporters:\n  otlp/ksCloud:\n    endpoint: ${env:CLOUD_OTEL_COLLECTOR_URL}\n    tls:\n      insecure: false\n  otlp:\n    endpoint: \"otelCollector:4317\"\n    tls:\n      insecure: true\n    headers:\n      uptrace-dsn: \n\n# service pulls the configured receivers, processors, and exporters together into\n# processing pipelines. Unused receivers/processors/exporters are ignored.\nservice:\n  pipelines:\n    traces:\n      receivers: [otlp]\n      processors: [batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp\n    metrics/2:\n      receivers: [hostmetrics]\n      processors: [attributes/ksCloud, batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp\n    metrics:\n      receivers: [otlp]\n      processors: [attributes/ksCloud, batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp\n    logs:\n      receivers: [otlp]\n      processors: [attributes/ksCloud, batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: otel-collector-config
      namespace: kubescape
  66: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: otel-collector
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: otel-collector
        helm.sh/chart: kubescape-operator-1.18.16
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: otel-collector
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: otel-collector
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/otel-config: 58c3ed11c126dfdfb4f9eb16397879693b9ff765f540251bf548ee8d18e30497
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: otel-collector
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: otel-collector
            kubescape.io/tier: core
            tier: ks-control-plane
        spec:
          affinity: null
          containers:
            - command:
                - /otelcol
                - --config=/conf/otel-collector-config.yaml
              env:
                - name: CLOUD_OTEL_COLLECTOR_URL
                  valueFrom:
                    configMapKeyRef:
                      key: metrics
                      name: ks-cloud-config
                - name: GOMEMLIMIT
                  value: 500MiB
                - name: GOGC
                  value: "80"
              image: docker.io/otel/opentelemetry-collector:0.97.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                tcpSocket:
                  port: otlp
              name: otel-collector
              ports:
                - containerPort: 4317
                  name: otlp
                  protocol: TCP
                - containerPort: 4318
                  name: otlp-http
                  protocol: TCP
              readinessProbe:
                tcpSocket:
                  port: otlp
              resources:
                limits:
                  cpu: 1
                  memory: 1Gi
                requests:
                  cpu: 100m
                  memory: 500Mi
              securityContext:
                allowPrivilegeEscalation: false
                runAsNonRoot: true
                runAsUser: 100
              volumeMounts:
                - mountPath: /conf
                  name: otel-collector-config-volume
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          serviceAccountName: default
          tolerations: null
          volumes:
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - configMap:
                name: otel-collector-config
              name: otel-collector-config-volume
  67: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: otel-collector
        helm.sh/chart: kubescape-operator-1.18.16
        tier: ks-control-plane
      name: otel-collector
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
            - port: 4317
              protocol: TCP
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  otel: enabled
          ports:
            - port: otlp
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: otel-collector
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  68: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: otel-collector
        kubescape.io/ignore: "true"
      name: otel-collector
      namespace: kubescape
    spec:
      ports:
        - name: otlp
          port: 4317
          protocol: TCP
          targetPort: 4317
        - name: otlp-http
          port: 4318
          protocol: TCP
          targetPort: 4318
      selector:
        app: otel-collector
      type: ClusterIP
  69: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: prometheus-exporter
    rules:
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - configurationscansummaries
          - vulnerabilitysummaries
        verbs:
          - get
          - watch
          - list
  70: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: prometheus-exporter
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: prometheus-exporter
    subjects:
      - kind: ServiceAccount
        name: prometheus-exporter
        namespace: kubescape
  71: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: prometheus-exporter
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: prometheus-exporter
        kubescape.io/ignore: "true"
        tier: ks-control-plane
      name: prometheus-exporter
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: prometheus-exporter
          tier: ks-control-plane
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: prometheus-exporter
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: prometheus-exporter
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - env:
                - name: GOMEMLIMIT
                  value: 10MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
              image: quay.io/kubescape/prometheus-exporter:v0.0.7
              imagePullPolicy: IfNotPresent
              livenessProbe:
                initialDelaySeconds: 3
                periodSeconds: 3
                tcpSocket:
                  port: 8080
              name: prometheus-exporter
              ports:
                - containerPort: 8080
                  name: metrics
                  protocol: TCP
              readinessProbe:
                tcpSocket:
                  port: 8080
              resources:
                limits:
                  cpu: 50m
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 10Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: prometheus-exporter
          tolerations: null
          volumes:
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                name: ks-cloud-config
              name: ks-cloud-config
  72: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: prometheus-exporter
        tier: ks-control-plane
      name: prometheus-exporter
      namespace: kubescape
    spec:
      ingress:
        - ports:
            - port: 8080
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: prometheus-exporter
          tier: ks-control-plane
      policyTypes:
        - Ingress
  73: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: prometheus-exporter
        kubescape.io/ignore: "true"
      name: prometheus-exporter
      namespace: kubescape
    spec:
      ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: prometheus-exporter
      type: null
  74: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: prometheus-exporter
        kubescape.io/ignore: "true"
      name: prometheus-exporter
      namespace: kubescape
  75: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app: prometheus-exporter
      name: prometheus-exporter
      namespace: kubescape
    spec:
      namespaceSelector:
        matchNames:
          - kubescape
      selector:
        matchLabels:
          app: prometheus-exporter
  76: |
    apiVersion: v1
    data:
      proxy.crt: foo
    kind: Secret
    metadata:
      annotations:
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation
        helm.sh/hook-weight: "0"
      labels:
        kubescape.io/ignore: "true"
      name: kubescape-proxy-certificate
      namespace: kubescape
    type: Opaque
  77: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      annotations:
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "1"
      labels:
        app: service-discovery
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: service-discovery
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: service-discovery
      namespace: kubescape
    spec:
      template:
        metadata:
          labels:
            app: service-discovery
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: service-discovery
            helm.sh/chart: kubescape-operator-1.18.16
            otel: enabled
            tier: ks-control-plane
          name: RELEASE-NAME
        spec:
          affinity: null
          containers:
            - args:
                - |
                  kubectl create configmap ks-cloud-config --from-literal=metrics=$(jq -r '.response.metrics' /data/services.json) --from-file=services=/data/services.json -n kubescape --dry-run=client -o yaml | kubectl patch configmap ks-cloud-config --patch "$(cat -)" -n kubescape
              command:
                - /bin/sh
                - -c
              image: docker.io/bitnami/kubectl:1.27.6
              imagePullPolicy: IfNotPresent
              name: update-configmap
              resources:
                limits:
                  cpu: 100m
                  memory: 50Mi
                requests:
                  cpu: 10m
                  memory: 10Mi
              volumeMounts:
                - mountPath: /data
                  name: shared-data
          initContainers:
            - args:
                - -method=get
                - -scheme=https
                - -host=api.armosec.io
                - -path=api/v2/servicediscovery
                - -path-output=/data/services.json
              env: null
              image: quay.io/kubescape/http-request:v0.2.6
              imagePullPolicy: IfNotPresent
              name: url-discovery
              resources:
                limits:
                  cpu: 100m
                  memory: 50Mi
                requests:
                  cpu: 10m
                  memory: 10Mi
              volumeMounts:
                - mountPath: /data
                  name: shared-data
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          restartPolicy: Never
          serviceAccountName: service-discovery
          tolerations: null
          volumes:
            - emptyDir: {}
              name: shared-data
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
  78: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      annotations:
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "0"
      labels:
        kubescape.io/ignore: "true"
      name: service-discovery
      namespace: kubescape
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - update
          - create
          - patch
          - get
          - list
  79: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      annotations:
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "0"
      labels:
        kubescape.io/ignore: "true"
      name: service-discovery
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: service-discovery
    subjects:
      - kind: ServiceAccount
        name: service-discovery
        namespace: kubescape
  80: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "0"
      labels:
        kubescape.io/ignore: "true"
      name: service-discovery
      namespace: kubescape
  81: |
    apiVersion: apiregistration.k8s.io/v1
    kind: APIService
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: v1beta1.spdx.softwarecomposition.kubescape.io
    spec:
      group: spdx.softwarecomposition.kubescape.io
      groupPriorityMinimum: 1000
      insecureSkipTLSVerify: true
      service:
        name: storage
        namespace: kubescape
      version: v1beta1
      versionPriority: 15
  82: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
          - endpoints
          - namespaces
          - nodes
          - persistentvolumeclaims
          - persistentvolumes
          - pods
          - secrets
          - serviceaccounts
          - services
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - admissionregistration.k8s.io
        resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apiregistration.k8s.io
        resources:
          - apiservices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - cronjobs
          - jobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - discovery.k8s.io
        resources:
          - endpointslices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - flowcontrol.apiserver.k8s.io
        resources:
          - prioritylevelconfigurations
          - flowschemas
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - clusterroles
          - clusterrolebindings
          - roles
          - rolebindings
        verbs:
          - get
          - watch
          - list
  83: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage:system:auth-delegator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subjects:
      - kind: ServiceAccount
        name: storage
        namespace: kubescape
  84: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: storage
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: storage
    subjects:
      - kind: ServiceAccount
        name: storage
        namespace: kubescape
  85: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/component: apiserver
        app.kubernetes.io/name: storage
        app.kubernetes.io/part-of: kubescape-storage
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
      name: storage
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: apiserver
          app.kubernetes.io/name: storage
          app.kubernetes.io/part-of: kubescape-storage
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app.kubernetes.io/component: apiserver
            app.kubernetes.io/name: storage
            app.kubernetes.io/part-of: kubescape-storage
            kubescape.io/tier: core
            otel: enabled
        spec:
          affinity: null
          containers:
            - env:
                - name: CLEANUP_INTERVAL
                  value: 6h
                - name: GOMEMLIMIT
                  value: 1200MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/storage:v0.0.85
              imagePullPolicy: IfNotPresent
              livenessProbe:
                tcpSocket:
                  port: 8443
              name: apiserver
              readinessProbe:
                tcpSocket:
                  port: 8443
              resources:
                limits:
                  cpu: 1500m
                  memory: 1500Mi
                requests:
                  cpu: 100m
                  memory: 400Mi
              securityContext:
                allowPrivilegeEscalation: false
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /data
                  name: data
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: storage
          tolerations: null
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: kubescape-storage
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
  86: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app.kubernetes.io/component: apiserver
        app.kubernetes.io/name: storage
        app.kubernetes.io/part-of: kubescape-storage
        kubescape.io/ignore: "true"
      name: kubescape-storage
      namespace: kubescape
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
  87: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage-auth-reader
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: extension-apiserver-authentication-reader
    subjects:
      - kind: ServiceAccount
        name: storage
        namespace: kubescape
  88: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage
      namespace: kubescape
    spec:
      ports:
        - port: 443
          protocol: TCP
          targetPort: 8443
      selector:
        app.kubernetes.io/component: apiserver
        app.kubernetes.io/name: storage
        app.kubernetes.io/part-of: kubescape-storage
  89: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage
      namespace: kubescape
  90: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: synchronizer
    rules:
      - apiGroups:
          - storage.k8s.io
        resources:
          - storageclasses
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - rolebindings
          - clusterrolebindings
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - pods
          - namespaces
          - nodes
          - configmaps
          - persistentvolumes
          - services
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - apps
        resources:
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - networking.k8s.io
        resources:
          - networkpolicies
          - ingresses
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - applicationactivities
          - applicationprofiles
          - networkneighborses
          - networkneighborhoods
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - knownservers
        verbs:
          - get
          - watch
          - list
          - create
          - update
          - patch
          - delete
      - apiGroups:
          - cilium.io
        resources:
          - ciliumnetworkpolicies
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - projectcalico.org
        resources:
          - networkpolicies
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - gateway.networking.k8s.io
        resources:
          - httproutes
          - tcproutes
          - udproutes
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - kubescape.io
        resources:
          - serviceauthentication
        verbs:
          - get
          - watch
          - list
  91: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: synchronizer
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: synchronizer
    subjects:
      - kind: ServiceAccount
        name: synchronizer
        namespace: kubescape
  92: |
    apiVersion: v1
    data:
      config.json: |-
        {
          "inCluster": {
            "resources": [
              {
                "group": "",
                "version": "v1",
                "resource": "services",
                "strategy": "patch"
              },
              {
                "group": "networking.k8s.io",
                "version": "v1",
                "resource": "ingresses",
                "strategy": "patch"
              },
              {
                "group": "gateway.networking.k8s.io",
                "version": "v1",
                "resource": "httproutes",
                "strategy": "patch"
              },
              {
                "group": "gateway.networking.k8s.io",
                "version": "v1",
                "resource": "tcproutes",
                "strategy": "patch"
              },
              {
                "group": "gateway.networking.k8s.io",
                "version": "v1",
                "resource": "udproutes",
                "strategy": "patch"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "version": "v1",
                "resource": "rolebindings",
                "strategy": "patch"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "version": "v1",
                "resource": "clusterrolebindings",
                "strategy": "patch"
              },
              {
                "group": "",
                "version": "v1",
                "resource": "persistentvolumes",
                "strategy": "patch"
              },
              {
                "group": "storage.k8s.io",
                "version": "v1",
                "resource": "storageclasses",
                "strategy": "patch"
              },
              {
                "group": "apps",
                "version": "v1",
                "resource": "deployments",
                "strategy": "patch"
              },
              {
                "group": "apps",
                "version": "v1",
                "resource": "statefulsets",
                "strategy": "patch"
              },
              {
                "group": "apps",
                "version": "v1",
                "resource": "daemonsets",
                "strategy": "patch"
              },
              {
                "group": "apps",
                "version": "v1",
                "resource": "replicasets",
                "strategy": "patch"
              },
              {
                "group": "batch",
                "version": "v1",
                "resource": "jobs",
                "strategy": "patch"
              },
              {
                "group": "batch",
                "version": "v1",
                "resource": "cronjobs",
                "strategy": "patch"
              },
              {
                "group": "",
                "version": "v1",
                "resource": "pods",
                "strategy": "patch"
              },
              {
                "group": "",
                "version": "v1",
                "resource": "namespaces",
                "strategy": "patch"
              },
              {
                "group": "",
                "version": "v1",
                "resource": "nodes",
                "strategy": "patch"
              },
              {
                "group": "",
                "version": "v1",
                "resource": "configmaps",
                "strategy": "patch"
              },
              {
                "group": "networking.k8s.io",
                "version": "v1",
                "resource": "networkpolicies",
                "strategy": "patch"
              },
              {
                "group": "spdx.softwarecomposition.kubescape.io",
                "version": "v1beta1",
                "resource": "applicationactivities",
                "strategy": "copy"
              },
              {
                "group": "spdx.softwarecomposition.kubescape.io",
                "version": "v1beta1",
                "resource": "applicationprofiles",
                "strategy": "copy"
              },
              {
                "group": "spdx.softwarecomposition.kubescape.io",
                "version": "v1beta1",
                "resource": "knownservers",
                "strategy": "copy"
              },
              {
                "group": "spdx.softwarecomposition.kubescape.io",
                "version": "v1beta1",
                "resource": "networkneighborses",
                "strategy": "copy"
              },
              {
                "group": "spdx.softwarecomposition.kubescape.io",
                "version": "v1beta1",
                "resource": "networkneighborhoods",
                "strategy": "copy"
              },
              {
                "group": "cilium.io",
                "version": "v2",
                "resource": "ciliumnetworkpolicies",
                "strategy": "patch"
              },
              {
                "group": "projectcalico.org",
                "version": "v3",
                "resource": "networkpolicies",
                "strategy": "patch"
              },
              {
                "group": "kubescape.io",
                "version": "v1",
                "resource": "serviceauthentication",
                "strategy": "patch"
              }
            ]
          },
          "httpEndpoint": {
            "serverPort": "8089",
            "resources": [
              {
                "group": "kubescape.io",
                "version": "v1",
                "resource": "nodeprofiles",
                "strategy": "copy"
              },
              {
                "group": "kubescape.io",
                "version": "v1",
                "resource": "runtimealerts",
                "strategy": "copy"
              }
            ]
          }
        }
    kind: ConfigMap
    metadata:
      labels:
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
      name: synchronizer
      namespace: kubescape
  93: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: synchronizer
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: synchronizer
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: synchronizer
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: synchronizer
          tier: ks-control-plane
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            checksum/cloud-config: c4dc912bbe62b0d5fd4734206c3cae52f56d766cbc20024182a2bcef09c0ae8e
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
            checksum/synchronizer-configmap: 737f16e4477c76d1da6e50bea7340999fd7607a74e2121cd9b98e27155f6880f
          labels:
            app: synchronizer
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: synchronizer
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - command:
                - /usr/bin/client
              env:
                - name: HELM_RELEASE
                  value: kubescape-operator-1.18.16
                - name: GOMEMLIMIT
                  value: 250MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/synchronizer:v0.0.72
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 7888
                initialDelaySeconds: 3
                periodSeconds: 3
              name: synchronizer
              resources:
                limits:
                  cpu: 200m
                  memory: 500Mi
                requests:
                  cpu: 100m
                  memory: 250Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /etc/config/clusterData.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: clusterData.json
                - mountPath: /etc/config/services.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: services.json
                - mountPath: /etc/ssl/certs/ca-certificates.crt
                  name: custom-ca-certificates
                  subPath: ca-certificates.crt
                - mountPath: /etc/config/config.json
                  name: config
                  readOnly: true
                  subPath: config.json
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: synchronizer
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - name: custom-ca-certificates
              secret:
                secretName: custom-ca-certificates
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
            - configMap:
                items:
                  - key: config.json
                    path: config.json
                name: synchronizer
              name: config
  94: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: synchronizer
        tier: ks-control-plane
      name: synchronizer
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 8443
              protocol: TCP
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: kubecop
                  app.kubernetes.io/name: kubecop
          ports:
            - port: 8089
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: synchronizer
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  95: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: synchronizer
        kubescape.io/ignore: "true"
      name: synchronizer
      namespace: kubescape
    spec:
      ports:
        - port: 8089
          protocol: TCP
          targetPort: 8089
      selector:
        app: synchronizer
      type: ClusterIP
  96: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: synchronizer
        kubescape.io/ignore: "true"
      name: synchronizer
      namespace: kubescape
default capabilities:
  1: |
    raw: "Thank you for installing kubescape-operator version 1.18.16.\nView your cluster's configuration scanning schedule:  \n> kubectl -n kubescape get cj kubescape-scheduler -o=jsonpath='{.metadata.name}{\"\\t\"}{.spec.schedule}{\"\\n\"}'\n\nTo change the schedule, set `.spec.schedule`:  \n> kubectl -n kubescape edit cj kubescape-scheduler\nView your cluster's image scanning schedule:  \n> kubectl -n kubescape get cj kubevuln-scheduler -o=jsonpath='{.metadata.name}{\"\\t\"}{.spec.schedule}{\"\\n\"}'  \n\nTo change the schedule, edit `.spec.schedule`:  \n> kubectl -n kubescape edit cj kubevuln-scheduler\n\n\nView your image vulnerabilities scan summaries:\n> kubectl get vulnerabilitymanifestsummaries -A\n\nDetailed reports are also available:\n> kubectl get vulnerabilitymanifests -A\n\nkubescape-operator generates suggested network policies. To view them:  \n> kubectl get generatednetworkpolicies -n <namespace>\n\n"
  2: |
    apiVersion: v1
    data:
      accessKey: ZjMwNGQ3M2ItZDQzYy00MTJiLTgyZWEtZTRjODU5NDkzY2U2
      account: OWU2YzBjMmMtNmJkMC00OTE5LTgxNWItNTUwMzBkZTdjOWEw
    kind: Secret
    metadata:
      labels:
        app: cloud-secret
        kubescape.io/ignore: "true"
        kubescape.io/infra: credentials
        tier: ks-control-plane
      name: cloud-secret
      namespace: kubescape
    type: Opaque
  3: |
    apiVersion: v1
    data:
      clusterData: |
        {
          "serviceDiscovery": true,
          "gatewayWebsocketURL": "gateway:8001",
          "gatewayRestURL": "gateway:8002",
          "vulnScanURL": "kubevuln:8080",
          "kubevulnURL": "kubevuln:8080",
          "kubescapeURL": "kubescape:8080",
          "clusterName": "kind-kind",
          "storage": true,
          "relevantImageVulnerabilitiesEnabled": true,
          "namespace": "kubescape",
          "imageVulnerabilitiesScanningEnabled": true,
          "postureScanEnabled": true,
          "otelCollector": true,
          "nodeAgent": "true",
          "maxImageSize": 5.36870912e+09,
          "maxSBOMSize": 2.097152e+07,
          "keepLocal": false,
          "scanTimeout": "5m",
          "vexGeneration": false,
          "continuousPostureScan": false,
          "listingURL": "http://grype-offline-db:80/listing.json",
          "relevantImageVulnerabilitiesConfiguration": "enable"
        }
      metrics: ""
      services: ""
    kind: ConfigMap
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: Delete=false
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation
        helm.sh/hook-weight: "0"
        helm.sh/resource-policy: keep
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/infra: config
        kubescape.io/tier: core
        tier: ks-control-plane
      name: ks-cloud-config
      namespace: kubescape
  4: |
    apiVersion: v1
    data:
      capabilities: |
        {
          "capabilities":{"admissionController":"disable","autoUpgrading":"disable","configurationScan":"enable","continuousScan":"disable","enableServiceAuth":false,"malwareDetection":"disable","networkPolicyService":"enable","nodeProfileService":"disable","nodeScan":"enable","prometheusExporter":"disable","relevancy":"enable","runtimeDetection":"disable","runtimeObservability":"enable","vexGeneration":"disable","vulnerabilityScan":"enable"},
          "components":{"clamAV":{"enabled":false},"cloudSecret":{"create":true,"name":"cloud-secret"},"customCaCertificates":{"name":"custom-ca-certificates"},"gateway":{"enabled":true},"hostScanner":{"enabled":true},"kollector":{"enabled":true},"kubescape":{"enabled":true},"kubescapeScheduler":{"enabled":true},"kubevuln":{"enabled":true},"kubevulnScheduler":{"enabled":true},"nodeAgent":{"enabled":true},"operator":{"enabled":true},"otelCollector":{"enabled":true},"prometheusExporter":{"enabled":false},"serviceDiscovery":{"enabled":true},"storage":{"enabled":true},"synchronizer":{"enabled":true}},
          "configurations":{"otelUrl":"otelCollector:4317","persistence":"enable","priorityClass":{"daemonset":100000100,"enabled":true},"prometheusAnnotations":"disable"}
        }
    kind: ConfigMap
    metadata:
      labels:
        app: ks-capabilities
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: ks-capabilities
      namespace: kubescape
  5: |
    apiVersion: v1
    data:
      matchingRules.json: |
        {"match":[{"apiGroups":["apps"],"apiVersions":["v1"],"resources":["deployments"]}],"namespaces":["default"]}
    kind: ConfigMap
    metadata:
      labels:
        app: kubescape
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: cs-matching-rules
      namespace: kubescape
  6: |
    apiVersion: scheduling.k8s.io/v1
    description: This priority class is for node-agent daemonset pods
    globalDefault: false
    kind: PriorityClass
    metadata:
      name: kubescape-critical
    value: 1.000001e+08
  7: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: gateway
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: gateway
        helm.sh/chart: kubescape-operator-1.18.16
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: gateway
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: gateway
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/cloud-config: 98e72a3a1a24264d2cdebc86b61829ee5b941fb590d6ca717ebaa880922046c6
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: gateway
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: gateway
            kubescape.io/tier: core
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: false
          containers:
            - args:
                - -alsologtostderr
                - -v=4
                - 2>&1
              env:
                - name: GOMEMLIMIT
                  value: 30MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: WEBSOCKET_PORT
                  value: "8001"
                - name: HTTP_PORT
                  value: "8002"
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/gateway:v0.1.23
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /v1/liveness
                  port: readiness-port
                initialDelaySeconds: 3
                periodSeconds: 3
              name: gateway
              ports:
                - containerPort: 8000
                  name: readiness-port
                  protocol: TCP
                - containerPort: 8001
                  name: websocket
                  protocol: TCP
                - containerPort: 8002
                  name: rest-api
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /v1/readiness
                  port: readiness-port
                initialDelaySeconds: 10
                periodSeconds: 5
              resources:
                limits:
                  cpu: 100m
                  memory: 50Mi
                requests:
                  cpu: 10m
                  memory: 30Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
  8: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: gateway
        helm.sh/chart: kubescape-operator-1.18.16
        tier: ks-control-plane
      name: gateway
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: kubescape
                  app.kubernetes.io/name: operator
                  tier: ks-control-plane
          ports:
            - port: websocket
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: gateway
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  9: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: gateway
        kubescape.io/ignore: "true"
      name: gateway
      namespace: kubescape
    spec:
      ports:
        - name: websocket
          port: 8001
          protocol: TCP
          targetPort: 8001
        - name: http
          port: 8002
          protocol: TCP
          targetPort: 8002
      selector:
        app: gateway
      type: ClusterIP
  10: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: grype-offline-db
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: grype-offline-db
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: grype-offline-db
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: grype-offline-db
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: grype-offline-db
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: grype-offline-db
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            tier: ks-control-plane
        spec:
          affinity: null
          containers:
            - image: ghcr.io/alexandreroman/grype-offline-db@sha256:155db3be4baa461a50cebadfc8f52108fca71aa4ce5e460a30a4e0922e899ed2
              imagePullPolicy: IfNotPresent
              name: grype-offline-db
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                limits:
                  cpu: 150m
                  memory: 200Mi
                requests:
                  cpu: 150m
                  memory: 200Mi
              securityContext:
                allowPrivilegeEscalation: false
                runAsNonRoot: true
          nodeSelector: null
          tolerations: null
  11: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: grype-offline-db
        tier: ks-control-plane
      name: grype-offline-db
      namespace: kubescape
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: kubescape
                  app.kubernetes.io/name: kubevuln
                  tier: ks-control-plane
          ports:
            - port: 8080
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: grype-offline-db
          tier: ks-control-plane
      policyTypes:
        - Ingress
  12: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: grype-offline-db
        kubescape.io/ignore: "true"
      name: grype-offline-db
      namespace: kubescape
    spec:
      ports:
        - port: 80
          protocol: TCP
          targetPort: 8080
      selector:
        app: grype-offline-db
      type: ClusterIP
  13: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kollector
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - namespaces
          - cronjobs
          - secrets
          - nodes
          - services
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - watch
          - list
  14: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kollector
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kollector
    subjects:
      - kind: ServiceAccount
        name: kollector
        namespace: kubescape
  15: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: kollector
        tier: ks-control-plane
      name: kollector
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
        - ports:
            - port: 80
              protocol: TCP
          to:
            - ipBlock:
                cidr: 169.254.169.254/32
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kollector
          tier: ks-control-plane
      policyTypes:
        - Egress
  16: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: kollector
        kubescape.io/ignore: "true"
      name: kollector
      namespace: kubescape
  17: |
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      labels:
        app: kollector
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: kollector
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kollector
      namespace: kubescape
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kollector
          tier: ks-control-plane
      serviceName: ""
      template:
        metadata:
          annotations:
            checksum/cloud-config: 98e72a3a1a24264d2cdebc86b61829ee5b941fb590d6ca717ebaa880922046c6
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: kollector
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: kollector
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - args:
                - -alsologtostderr
                - -v=4
                - 2>&1
              env:
                - name: GOMEMLIMIT
                  value: 100MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/kollector:v0.1.36
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /v1/liveness
                  port: readiness-port
                initialDelaySeconds: 3
                periodSeconds: 3
              name: kollector
              ports:
                - containerPort: 8000
                  name: readiness-port
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /v1/readiness
                  port: readiness-port
                initialDelaySeconds: 10
                periodSeconds: 5
              resources:
                limits:
                  cpu: 500m
                  memory: 500Mi
                requests:
                  cpu: 10m
                  memory: 100Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 100
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          serviceAccountName: kollector
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - emptyDir: {}
              name: tmp-dir
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
  18: |
    apiVersion: v1
    data:
      request-body.json: '{"commands":[{"CommandName":"kubescapeScan","args":{"scanV1": {}}}]}'
    kind: ConfigMap
    metadata:
      labels:
        app: kubescape-scheduler
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubescape-scheduler
      namespace: kubescape
  19: |
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      labels:
        app: kubescape-scheduler
        app.kubernetes.io/name: kubescape-scheduler
        armo.tier: kubescape-scan
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubescape-scheduler
      namespace: kubescape
    spec:
      failedJobsHistoryLimit: 1
      jobTemplate:
        spec:
          template:
            metadata:
              labels:
                app: kubescape-scheduler
                app.kubernetes.io/name: kubescape-scheduler
                armo.tier: kubescape-scan
                kubescape.io/tier: core
            spec:
              affinity: null
              automountServiceAccountToken: false
              containers:
                - args:
                    - -method=post
                    - -scheme=http
                    - -host=operator:4002
                    - -path=v1/triggerAction
                    - -headers=Content-Type:application/json
                    - -path-body=/home/ks/request-body.json
                  image: quay.io/kubescape/http-request:v0.2.6
                  imagePullPolicy: IfNotPresent
                  name: kubescape-scheduler
                  resources:
                    limits:
                      cpu: 10m
                      memory: 20Mi
                    requests:
                      cpu: 1m
                      memory: 10Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    readOnlyRootFilesystem: true
                    runAsNonRoot: true
                    runAsUser: 100
                  volumeMounts:
                    - mountPath: /home/ks/request-body.json
                      name: kubescape-scheduler
                      readOnly: true
                      subPath: request-body.json
              nodeSelector: null
              restartPolicy: Never
              tolerations: null
              volumes:
                - configMap:
                    name: kubescape-scheduler
                  name: kubescape-scheduler
      schedule: 1 2 3 4 5
      successfulJobsHistoryLimit: 3
  20: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - pods/proxy
          - namespaces
          - secrets
          - nodes
          - configmaps
          - services
          - serviceaccounts
          - endpoints
          - persistentvolumeclaims
          - persistentvolumes
          - limitranges
          - replicationcontrollers
          - podtemplates
          - resourcequotas
          - events
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - admissionregistration.k8s.io
        resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apiregistration.k8s.io
        resources:
          - apiservices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - controllerrevisions
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - autoscaling
        resources:
          - horizontalpodautoscalers
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - discovery.k8s.io
        resources:
          - endpointslices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - events.k8s.io
        resources:
          - events
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - hostdata.kubescape.cloud
        resources:
          - APIServerInfo
          - ControlPlaneInfo
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - networking.k8s.io
        resources:
          - networkpolicies
          - Ingress
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - policy
        resources:
          - poddisruptionbudgets
          - podsecuritypolicies
          - PodSecurityPolicy
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - clusterroles
          - clusterrolebindings
          - roles
          - rolebindings
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - storage.k8s.io
        resources:
          - csistoragecapacities
          - storageclasses
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - networking.k8s.io
        resources:
          - ingresses
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - extensions
        resources:
          - Ingress
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - gateway.networking.k8s.io
        resources:
          - httproutes
          - gateways
          - gatewayclasses
          - tcproutes
          - tlsroutes
          - udproutes
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - update
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - workloadconfigurationscans
          - workloadconfigurationscansummaries
        verbs:
          - create
          - update
          - patch
      - apiGroups:
          - kubescape.io
        resources:
          - serviceauthentication
        verbs:
          - get
          - watch
          - list
  21: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kubescape
    subjects:
      - kind: ServiceAccount
        name: kubescape
        namespace: kubescape
  22: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: kubescape
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: kubescape
        helm.sh/chart: kubescape-operator-1.18.16
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubescape
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kubescape
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/cloud-config: 98e72a3a1a24264d2cdebc86b61829ee5b941fb590d6ca717ebaa880922046c6
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/host-scanner-configmap: cb6c9f6c0baf504f7e8b4b5daf0c3a84cdf0cf21e3a098be67e57fdcd2db8ac9
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: kubescape
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: kubescape
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - command:
                - ksserver
              env:
                - name: GOMEMLIMIT
                  value: 400MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: KS_DOWNLOAD_ARTIFACTS
                  value: "true"
                - name: RULE_PROCESSING_GOMAXPROCS
                  value: ""
                - name: KS_DEFAULT_CONFIGMAP_NAME
                  value: kubescape-config
                - name: KS_DEFAULT_CONFIGMAP_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: KS_CONTEXT
                  value: kind-kind
                - name: KS_DEFAULT_CLOUD_CONFIGMAP_NAME
                  value: ks-cloud-config
                - name: KS_ENABLE_HOST_SCANNER
                  value: "true"
                - name: KS_SKIP_UPDATE_CHECK
                  value: "false"
                - name: KS_HOST_SCAN_YAML
                  value: /home/nonroot/.kubescape/host-scanner.yaml
                - name: LARGE_CLUSTER_SIZE
                  value: "1500"
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/kubescape:v3.0.11
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /livez
                  port: 8080
                initialDelaySeconds: 3
                periodSeconds: 3
              name: kubescape
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8080
                initialDelaySeconds: 3
                periodSeconds: 3
              resources:
                limits:
                  cpu: 600m
                  memory: 1Gi
                requests:
                  cpu: 250m
                  memory: 400Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /home/nonroot/.kubescape
                  name: kubescape-volume
                  subPath: config.json
                - mountPath: /home/nonroot/.kubescape/host-scanner.yaml
                  name: host-scanner-definition
                  subPath: host-scanner-yaml
                - mountPath: /home/nonroot/results
                  name: results
                - mountPath: /home/nonroot/failed
                  name: failed
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: kubescape
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
            - configMap:
                name: host-scanner-definition
              name: host-scanner-definition
            - emptyDir: {}
              name: kubescape-volume
            - emptyDir: {}
              name: results
            - emptyDir: {}
              name: failed
  23: |
    apiVersion: v1
    data:
      host-scanner-yaml: |-
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          name: host-scanner
          namespace: kubescape
          labels:
            app: host-scanner
            k8s-app: kubescape-host-scanner
        spec:
          selector:
            matchLabels:
              name: host-scanner
          template:
            metadata:
              labels:
                kubescape.io/ignore: "true"
                kubescape.io/tier: "core"
                name: host-scanner
                otel: enabled
            spec:
              nodeSelector:
              affinity:
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/control-plane
                  operator: Exists
                - effect: NoSchedule
                  key: node-role.kubernetes.io/master
                  operator: Exists
              containers:
              - name: host-sensor
                image: "quay.io/kubescape/host-scanner:v1.0.66"
                imagePullPolicy: IfNotPresent
                securityContext:
                  allowPrivilegeEscalation: true
                  privileged: true
                  readOnlyRootFilesystem: true
                  procMount: Unmasked
                env:
                - name: KS_LOGGER_LEVEL
                  value: "info"
                - name: KS_LOGGER_NAME
                  value: "zap"
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      name: cloud-secret
                      key: account
                - name: CLUSTER_NAME
                  value: "kind-kind"
                - name: OTEL_COLLECTOR_SVC
                  value: "otel-collector.kubescape.svc:4317"
                ports:
                  - name: scanner # Do not change port name
                    containerPort: 7888
                    protocol: TCP
                resources:
                  limits:
                    cpu: 0.4m
                    memory: 400Mi
                  requests:
                    cpu: 0.1m
                    memory: 200Mi
                volumeMounts:
                - mountPath: /host_fs
                  name: host-filesystem
                startupProbe:
                  httpGet:
                    path: /readyz
                    port: 7888
                  failureThreshold: 30
                  periodSeconds: 1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 7888
                  periodSeconds: 10
              terminationGracePeriodSeconds: 120
              dnsPolicy: ClusterFirstWithHostNet
              automountServiceAccountToken: false
              volumes:
              - hostPath:
                  path: /
                  type: Directory
                name: host-filesystem
              hostPID: true
              hostIPC: true
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: host-scanner-definition
      namespace: kubescape
  24: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: kubescape
        helm.sh/chart: kubescape-operator-1.18.16
        tier: ks-control-plane
      name: kubescape
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: kubescape
                  app.kubernetes.io/name: operator
                  tier: ks-control-plane
          ports:
            - port: http
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kubescape
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  25: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
    rules:
      - apiGroups:
          - apps
        resources:
          - daemonsets
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
          - delete
  26: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: kubescape
    subjects:
      - kind: ServiceAccount
        name: kubescape
        namespace: kubescape
  27: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: kubescape
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
    spec:
      ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: kubescape
      type: ClusterIP
  28: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: kubescape
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
  29: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app: kubescape
        kubescape.io/ignore: "true"
      name: kubescape-monitor
      namespace: kubescape
    spec:
      endpoints:
        - interval: 200s
          path: /v1/metrics
          port: http
          scrapeTimeout: 150s
      namespaceSelector:
        matchNames:
          - kubescape
      selector:
        matchLabels:
          app: kubescape
  30: |
    apiVersion: v1
    data:
      request-body.json: '{"commands":[{"commandName":"scan","designators":[{"designatorType":"Attributes","attributes":{}}]}]}'
    kind: ConfigMap
    metadata:
      labels:
        app: kubevuln-scheduler
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubevuln-scheduler
      namespace: kubescape
  31: |
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      labels:
        app: kubevuln-scheduler
        app.kubernetes.io/name: kubevuln-scheduler
        armo.tier: vuln-scan
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubevuln-scheduler
      namespace: kubescape
    spec:
      failedJobsHistoryLimit: 1
      jobTemplate:
        spec:
          template:
            metadata:
              labels:
                app: kubevuln-scheduler
                app.kubernetes.io/name: kubevuln-scheduler
                armo.tier: vuln-scan
                kubescape.io/tier: core
            spec:
              affinity: null
              automountServiceAccountToken: false
              containers:
                - args:
                    - -method=post
                    - -scheme=http
                    - -host=operator:4002
                    - -path=v1/triggerAction
                    - -headers=Content-Type:application/json
                    - -path-body=/home/ks/request-body.json
                  image: quay.io/kubescape/http-request:v0.2.6
                  imagePullPolicy: IfNotPresent
                  name: kubevuln-scheduler
                  resources:
                    limits:
                      cpu: 10m
                      memory: 20Mi
                    requests:
                      cpu: 1m
                      memory: 10Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    readOnlyRootFilesystem: true
                    runAsNonRoot: true
                    runAsUser: 100
                  volumeMounts:
                    - mountPath: /home/ks/request-body.json
                      name: kubevuln-scheduler
                      readOnly: true
                      subPath: request-body.json
              nodeSelector: null
              restartPolicy: Never
              tolerations: null
              volumes:
                - configMap:
                    name: kubevuln-scheduler
                  name: kubevuln-scheduler
      schedule: 1 2 3 4 5
      successfulJobsHistoryLimit: 3
  32: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubevuln
    rules:
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - vulnerabilitymanifests
          - vulnerabilitymanifestsummaries
          - openvulnerabilityexchangecontainers
          - sbomsyfts
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - sbomsyftfiltereds
        verbs:
          - get
          - watch
          - list
  33: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubevuln
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kubevuln
    subjects:
      - kind: ServiceAccount
        name: kubevuln
        namespace: kubescape
  34: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: kubevuln
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: kubevuln
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubevuln
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kubevuln
          tier: ks-control-plane
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            checksum/cloud-config: 98e72a3a1a24264d2cdebc86b61829ee5b941fb590d6ca717ebaa880922046c6
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: kubevuln
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: kubevuln
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - args:
                - -alsologtostderr
                - -v=4
                - 2>&1
              env:
                - name: GOMEMLIMIT
                  value: 1000MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: PRINT_POST_JSON
                  value: ""
                - name: CA_MAX_VULN_SCAN_ROUTINES
                  value: "1"
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/kubevuln:v0.3.25
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /v1/liveness
                  port: 8080
                initialDelaySeconds: 3
                periodSeconds: 3
              name: kubevuln
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /v1/readiness
                  port: 8080
              resources:
                limits:
                  cpu: 1500m
                  ephemeral-storage: 10Gi
                  memory: 5000Mi
                requests:
                  cpu: 300m
                  ephemeral-storage: 5Gi
                  memory: 1000Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /home/nonroot/anchore-resources/db
                  name: grype-db-cache
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
                - mountPath: /home/nonroot/.cache/grype
                  name: grype-db
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: kubevuln
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - emptyDir: {}
              name: tmp-dir
            - emptyDir: {}
              name: grype-db-cache
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
            - emptyDir: {}
              name: grype-db
  35: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: kubevuln
        tier: ks-control-plane
      name: kubevuln
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: kubescape
                  app.kubernetes.io/name: operator
                  tier: ks-control-plane
          ports:
            - port: 8080
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kubevuln
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  36: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: kubevuln
        kubescape.io/ignore: "true"
      name: kubevuln
      namespace: kubescape
    spec:
      ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: kubevuln
      type: ClusterIP
  37: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: kubevuln
        kubescape.io/ignore: "true"
      name: kubevuln
      namespace: kubescape
  38: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: node-agent
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - nodes
          - services
          - endpoints
          - namespaces
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - deployments
          - daemonsets
          - statefulsets
          - replicasets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - sbomsyfts
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - applicationactivities
          - applicationprofiles
          - networkneighborses
          - networkneighborhoods
          - sbomsyftfiltereds
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
      - apiGroups:
          - kubescape.io
        resources:
          - runtimerulealertbindings
        verbs:
          - list
          - watch
  39: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: node-agent
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: node-agent
    subjects:
      - kind: ServiceAccount
        name: node-agent
        namespace: kubescape
  40: |
    apiVersion: v1
    data:
      config.json: |
        {
            "applicationProfileServiceEnabled": true,
            "relevantCVEServiceEnabled": true,
            "prometheusExporterEnabled": false,
            "runtimeDetectionEnabled": false,
            "networkServiceEnabled": true,
            "malwareDetectionEnabled": false,
            "nodeProfileServiceEnabled": false,
            "initialDelay": "2m",
            "updateDataPeriod": "10m",
            "nodeProfileInterval": "10m",
            "maxSniffingTimePerContainer": "24h",
            "exporters": {
              "httpExporterConfig":{"maxAlertsPerMinute":1000,"method":"POST","url":"http://synchronizer:8089/apis/v1/kubescape.io"},
              "alertManagerExporterUrls":[],
              "stdoutExporter":true,
              "syslogExporterURL": ""
            }
        }
    kind: ConfigMap
    metadata:
      labels:
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
      name: node-agent
      namespace: kubescape
  41: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        app: node-agent
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: node-agent
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: node-agent
      namespace: kubescape
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: node-agent
          tier: ks-control-plane
      template:
        metadata:
          annotations:
            checksum/cloud-config: 98e72a3a1a24264d2cdebc86b61829ee5b941fb590d6ca717ebaa880922046c6
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/node-agent-config: 3ccfb3467579f1c6849389829a0d66deab8589e05e2e05dfdbc4c2b6d64ff16a
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
            container.apparmor.security.beta.kubernetes.io/node-agent: unconfined
          labels:
            alt-name: node-agent
            app: node-agent
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: node-agent
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
          automountServiceAccountToken: true
          containers:
            - env:
                - name: GOMEMLIMIT
                  value: 600MiB
                - name: HOST_ROOT
                  value: /host
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4318
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: NAMESPACE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: NodeName
              image: quay.io/kubescape/node-agent:v0.2.81
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /livez
                  port: 7888
                initialDelaySeconds: 3
                periodSeconds: 3
              name: node-agent
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 7888
                initialDelaySeconds: 3
                periodSeconds: 3
              resources:
                limits:
                  cpu: 500m
                  memory: 700Mi
                requests:
                  cpu: 100m
                  memory: 180Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_PTRACE
                    - NET_ADMIN
                    - SYSLOG
                    - SYS_RESOURCE
                    - IPC_LOCK
                    - NET_RAW
                privileged: false
                runAsUser: 0
                seLinuxOptions:
                  type: spc_t
              volumeMounts:
                - mountPath: /host
                  name: host
                - mountPath: /run
                  name: run
                - mountPath: /lib/modules
                  name: modules
                - mountPath: /sys/kernel/debug
                  name: debugfs
                - mountPath: /sys/fs/cgroup
                  name: cgroup
                - mountPath: /sys/fs/bpf
                  name: bpffs
                - mountPath: /data
                  name: data
                - mountPath: /clamav
                  name: clamrun
                  readOnly: false
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /etc/config/clusterData.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: clusterData.json
                - mountPath: /etc/config/config.json
                  name: config
                  readOnly: true
                  subPath: config.json
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          hostPID: true
          nodeSelector:
            kubernetes.io/os: linux
          priorityClassName: kubescape-critical
          serviceAccountName: node-agent
          tolerations: null
          volumes:
            - hostPath:
                path: /
              name: host
            - hostPath:
                path: /run
              name: run
            - hostPath:
                path: /sys/fs/cgroup
              name: cgroup
            - hostPath:
                path: /lib/modules
              name: modules
            - hostPath:
                path: /sys/fs/bpf
              name: bpffs
            - hostPath:
                path: /sys/kernel/debug
              name: debugfs
            - emptyDir: null
              name: data
            - emptyDir: {}
              name: clamdb
            - emptyDir: {}
              name: clamrun
            - configMap:
                items:
                  - key: clamd.conf
                    path: clamd.conf
                  - key: freshclam.conf
                    path: freshclam.conf
                name: clamav
              name: etc
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
            - configMap:
                items:
                  - key: config.json
                    path: config.json
                name: node-agent
              name: config
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
  42: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: node-agent
        app.kubernetes.io/name: node-agent
        kubescape.io/ignore: "true"
      name: node-agent
      namespace: kubescape
    spec:
      ports:
        - name: prometheus
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app.kubernetes.io/name: node-agent
  43: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: node-agent
      namespace: kubescape
  44: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: operator
        kubescape.io/ignore: "true"
      name: kubescape-admission-webhook
      namespace: kubescape
    spec:
      ports:
        - port: 443
          targetPort: 8443
      selector:
        app: operator
      type: ClusterIP
  45: |
    apiVersion: v1
    data:
      tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjRENDQWxpZ0F3SUJBZ0lRSzRyWjRwYUJ3cTdyRFJSdjh5bEpYekFOQmdrcWhraUc5dzBCQVFzRkFEQWEKTVJnd0ZnWURWUVFEREE4cUxrNUJUVVZUVUVGRFJTNXpkbU13SGhjTk1qUXdOakU1TURnek9UQTVXaGNOTWpjdwpOREE1TURnek9UQTVXakEwTVRJd01BWURWUVFERXlscmRXSmxjMk5oY0dVdFlXUnRhWE56YVc5dUxYZGxZbWh2CmIyc3VUa0ZOUlZOUVFVTkZMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUwvNGtiamMvOHc4dElDTkNrNTJIVXdBRkFQVGtRRXVQY251RUxsWk0rUmRPQVFUaXhGNGhpZGRRT1ZsTXN3Zgo4bkJnUE1VemIwY2VDY09TYzdLOTF2eml1ckNmSTlkK3RXOGFYcXEydWFmZ1BKOGpXaG13OGRTSEJ5MEFKTC81Cmx4aVJEdmVkdGdUU3JHZEszU0ltY2FWSm1ZZ202bzlrVmlRZnM0alo2Q2dqL0g4L040dGI1TmNiSTlnejBJeFIKcFoxVjRpSXZJVDFtWTZjV0VUTE1YN3V5QW1VcXVVNHNBalBGcy8rdEl4SmxJSjlZOEdJQWZHekVjZ05xTlVIRQpqNXEzSHpDSHRIT3E0SU5pSy9uR1U4SzdBZTBTZS9oN3FoTjIwWXRuZHBDVnBlamhaN3NzanVRSmdiS2tCM3BaCkZMbFRkOHFyZkcvNDA4M0h2Mmp0eHBFQ0F3RUFBYU9CbHpDQmxEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVXNPRXlwUHVQYjNOWFIrTGpUWTZtVk1MUjB3b3dOQVlEVlIwUkJDMHdLNElwYTNWaVpYTmpZWEJsCkxXRmtiV2x6YzJsdmJpMTNaV0pvYjI5ckxrNUJUVVZUVUVGRFJTNXpkbU13RFFZSktvWklodmNOQVFFTEJRQUQKZ2dFQkFHOGZVZCs4SGdhTDU3UXkxQ3VnK3hPaWtSeFhvNll5MlRaSEFkWmxwNGhrZkpscGN3RG5QVHJUZUlMYgpWVEM4Ym41NmlkWjVNaGlHbVE2bzNCYnBVTlY2YUI4RHFzRFJvYzROWXgyUk5qb2wvS0Z5dlZKWlBIR0wwUVVGCklMajZiQmxFenhnYWp5c2ZKYzBsaWl5UjJZSWNESTRLaVB5ZnFObnB4T2NyWTFLOGNVYnlmaG1iRVBDcXNQN2gKZ25NUURVMk9xUmN5Y2tvTGp5NHFodmZEUTNBTVAxa0hYTXNFOVRRSjNzN05OSlh2TWVJWXhvVGc1bVpiR0dGTAp1Tnh3cDUxdnliZ0pYNWJjenRBOTJKbkpjY3lOdzdiZU5lSmludHc2ekcwRVNEK01LN1BRT3VtckpNR05NR01nCm5yZUVRcGRZUWVYWmo4MUxHVEpKNWJ1czBvRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdi9pUnVOei96RHkwZ0kwS1RuWWRUQUFVQTlPUkFTNDl5ZTRRdVZrejVGMDRCQk9MCkVYaUdKMTFBNVdVeXpCL3ljR0E4eFROdlJ4NEp3NUp6c3IzVy9PSzZzSjhqMTM2MWJ4cGVxcmE1cCtBOG55TmEKR2JEeDFJY0hMUUFrdi9tWEdKRU85NTIyQk5Lc1owcmRJaVp4cFVtWmlDYnFqMlJXSkIremlObm9LQ1A4Zno4MwppMXZrMXhzajJEUFFqRkdsblZYaUlpOGhQV1pqcHhZUk1zeGZ1N0lDWlNxNVRpd0NNOFd6LzYwakVtVWduMWp3CllnQjhiTVJ5QTJvMVFjU1BtcmNmTUllMGM2cmdnMklyK2NaVHdyc0I3Uko3K0h1cUUzYlJpMmQya0pXbDZPRm4KdXl5TzVBbUJzcVFIZWxrVXVWTjN5cXQ4Yi9qVHpjZS9hTzNHa1FJREFRQUJBb0lCQUE2NzMwTlhBdk1EL2I2WQpGS0J0QkZhZTh1cFFSS0xZajdsOTRoNjNyL25wQmJHYVptUVM0Z2tIYVVHeUFMSVdDWitDWTJlblNQVW1ZdzExCm9oZW41bVpHYUpuQnZSaC9DeUhaM2tZdi9CUGNiQXF5eGVtTzRTQzB0R0pKem9oRmVjbFM2TmtzYTVuM0tYQk0KR0tqVVZvaWZHMytOclJjUVZtUXpZcTR3TzFkSk9ieWJDQ1cvbnpQbUdrb2orcDAzTWVMZmVOMXczRUpJZEdyWgpjUllQWHFOeXlZMlZ0dEpPUDZ2VUhrU1dad2NuaXpSNWorc2xKN2g1YVhYczMwTWlPNWRKZ0xxaUxIYnU5ZVFjCkhtNHVDd1A3SzRzZENsc1hKSUtRVWpRQmdMeUFVeUdPSjRRWllpU3lsQ1JtdDdtcTQrQk1jQmkzKy9uNUxKYysKbUMrdkJWa0NnWUVBMWNEQUkyOU1SN0xlR1hsN2phbUZ5eGFOc1htSGs1S0RuaW9KS20zdHBpbEI2cC9NektFdQorZFJHa0lOUk9JMVM1VEZQVi9OMlRlUWxGSXRJc0poMDJ5aUZEcHlkL21kMTg3MHJ6ZWNoMTV0SGJZWW8yb2hFCnRQa2pTbDduSmk4eWdsMWQxTE1IMUNSY2VlTWpkMm12dU9HVWlvSHJvOXFxRWpWZ3RkeTY0NThDZ1lFQTVlbTMKdktJSEE5OE9uWEZ2Y1l2Z3hDRWdqblpJWlV6Lzh3WVEzOTlwNytMSFlJZ0dkNFBwc2FVSGlBU0UydDNuZGwxbwpJenlCc0crR1ZBbGVCYnJZUk9qVGdHL3ZkUXkrdEtKSHZ2WUVBUmJ6d2E4TkxwMEhDUGQ0Mkh5ZjFMVE02cWFnClU0Q2R2cHpUeFB5bkltc2U4dFpvRko0bGY0VVFpTWFOOHlQTnA4OENnWUJ5SzhNMDZoVEhVeTI0VTUvLzJhVmkKQllqblc2OWp6bVZJek5FYWZaN3JHcXhmb3Iwa0s0L0kxMjVkY0JhbzZ5dDB5ZkxFV29FOU4zZnEwajZnUEw1bAo5TzJsRVZoK2MwcVlSdG1uNENXK1lPMDAvZXpDVlBqRjVUREpYNGw5WnNaR3haSUJzeUtpV0UyZ3VRYlBtSDdJCmRJei9za2RudkxzTWdNQklRejc3cHdLQmdDWUhPblRnOS9nVDlQN2x2R0V6bWNIWEdPTjNmUklFWW5GNEYySncKT2IyTDdSNXlZVjl6V2p3ZjU5Yi9xRm5yU2xXeHJYL21paXo4eFdNeENYUTVLM3g2WmtGZ1FtTkI4R2xBVGsydgpzNG5hbWdiM1JWN29hamw1ZFd1WmNYWmxVVitlbi9ZdjErZW5XUC9FS29EdTV2ZVRyek41MVFuNm9IbC9IZ3VSCmFIclJBb0dBTkdLdmNKVHZ2Vkl1TnF2Q0FuV3E3REdvaUFFcDZPcUtiZXpENVYrb0prZWpZa3dRdGtWWEMzeGEKcytVd25zSlM1cVZhb3NmS0xYUlBPdnNzaEhHQmZmSkpiNFVsSFUzS3lPemJscGZMeTVFR0c4RHViYVpVUFJ0QgpKenJWU2IzK2JTeCt4Tk5kV0hzeU5zRGJEWVlLTjZnV1Q4RUhXTVZWNlFXaDBjNHo5R0k9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
    kind: Secret
    metadata:
      name: kubescape-admission-webhook.NAMESPACE.svc-kubescape-tls-pair
      namespace: kubescape
    type: kubernetes.io/tls
  46: |
    apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingWebhookConfiguration
    metadata:
      name: validation
    webhooks:
      - admissionReviewVersions:
          - v1
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJRENDQWdpZ0F3SUJBZ0lSQUt6Mi9hanEwOUY0VTdOeFVCUjk3dW93RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQXd3UEtpNU9RVTFGVTFCQlEwVXVjM1pqTUI0WERUSTBNRFl4T1RBNE16a3dPRm9YRFRJMwpNRFF3T1RBNE16a3dPRm93R2pFWU1CWUdBMVVFQXd3UEtpNU9RVTFGVTFCQlEwVXVjM1pqTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcklQZkwyelB3bFgwTTA3N28wZTQ1T0s3eTByeU11TzMKeG9ZcitBRjZlNzlLSVk4azRCR2h5YUQ1eExUTVNUMmdSRytRdW5LZGZEK2ZkUW1VQ0FJSjN1bFBjaFpuZnBhZgplaGtMQ05wUHlPU2NidzZ3d2FicjMxbzVjQ29NNEdrNWhRZFVzeDlGQTQ1enVhcEVqWHJEWklEdGJKQjI1dGdlCmVkMFE0U0QybGZvSDIxNWluZWNseUJrWmErQnduSEY5Sm0wWHBtNmNsb1g3RFdCRDV4WmZJYkEwKzdsTGVUNXIKUUdodDF4aFVwU3pQVzJCU0dNNnN1UTNZTDZwb3B4SXBRSjRQd3hiTnBLbk1UU3FvSEZmRnIrT2YvcE9teTdRcQpSVDFtenFxTkg0Wk1Sc0Z0Q1p3RHRVaUVSMFNCN2lCbHFLRitzVzdrbU9nZWpHbTdPUURQandJREFRQUJvMkV3Clh6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkxEaE1xVDdqMjl6VjBmaTQwMk9wbFRDMGRNSwpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJ2N1E1b0gzd256MitydmNORE42MEl4Z3FCNkRCNjJoRkNMVHpICkxTNGZtbWpzRFVid3hJdUNqQjdMWVh3UDc1SjlseUo0RkwyZ0FEakJxaVpLZy9NNFFVLys0dmVETFpPUVJCNHcKb0U4QXM5TE1qNmdyaSt1UXFQbkd5VXFxV3RpMWFoVWlJd2Jud04zd3U0ek5PNjZIOW81NENOQ0JZZmRKbU16eQorSm4wYUZCY0tJbnkwUHhiS1FCZnZjbGhvKzJZMXFGYzgxcXMxM1pNWE9JSEJuT0RNQ3NPaTgvTm9zanJDcVNJCjJWRG5yUTRBSXcvbEoydWwvVEozRmpHQW1SVnpQOXN5aE5teHprdHhXL2R4NWJsNW04Z0ZqM0hGWmdMeVVEYjIKMjBVMVI5RUhaRU0xZGNybVVTZUxkRFZaOW85UFd6S2lLSmFYQ09ocUU4L09aZDhWCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          service:
            name: kubescape-admission-webhook
            namespace: kubescape
            path: /validate
            port: 443
        failurePolicy: Ignore
        name: validation.kubescape.admission
        rules:
          - apiGroups:
              - '*'
            apiVersions:
              - v1
            operations:
              - CREATE
              - UPDATE
              - DELETE
              - CONNECT
            resources:
              - pods
              - pods/exec
              - pods/portforward
              - pods/attach
              - clusterrolebindings
              - rolebindings
            scope: '*'
        sideEffects: None
  47: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - nodes
          - namespaces
          - configmaps
          - secrets
          - services
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - deployments
          - daemonsets
          - statefulsets
          - replicasets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - vulnerabilitymanifests
          - vulnerabilitymanifestsummaries
          - workloadconfigurationscans
          - workloadconfigurationscansummaries
          - openvulnerabilityexchangecontainers
          - sbomsyftfiltereds
          - sbomsyfts
        verbs:
          - get
          - watch
          - list
          - delete
      - apiGroups:
          - kubescape.io
        resources:
          - serviceauthentication
        verbs:
          - get
          - watch
          - list
          - create
          - update
          - delete
  48: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: operator
    subjects:
      - kind: ServiceAccount
        name: operator
        namespace: kubescape
  49: |
    apiVersion: v1
    data:
      config.json: |
        {
            "namespace": "kubescape",
            "triggersecurityframework": true,
            "httpExporterConfig":{"maxAlertsPerMinute":1000,"method":"POST","url":"http://synchronizer:8089/apis/v1/kubescape.io"}
        }
    kind: ConfigMap
    metadata:
      labels:
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
      name: operator
      namespace: kubescape
  50: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: operator
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: operator
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: operator
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: operator
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/capabilities-config: f11b837227c9a614532bdd8b5e00278a81a1845e0b9cd26ae9b400ce8909a8b6
            checksum/cloud-config: 98e72a3a1a24264d2cdebc86b61829ee5b941fb590d6ca717ebaa880922046c6
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/matching-rules-config: 9282b3916f506ac98eccbdfe686271420ff520374de611f7efce8235dcdf8809
            checksum/operator-config: 13ee93fac3da2973afa49f148b1538ee1f29c6a7a720a3a4a6f2de8997cb6f20
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: operator
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: operator
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - args:
                - -alsologtostderr
                - -v=4
                - 2>&1
              env:
                - name: HELM_RELEASE
                  value: kubescape-operator-1.18.16
                - name: GOMEMLIMIT
                  value: 100MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/operator:v0.2.13
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /v1/liveness
                  port: readiness-port
                initialDelaySeconds: 3
                periodSeconds: 3
              name: operator
              ports:
                - containerPort: 4002
                  name: trigger-port
                  protocol: TCP
                - containerPort: 8000
                  name: readiness-port
                  protocol: TCP
                - containerPort: 8443
                  name: admission-port
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /v1/readiness
                  port: readiness-port
                initialDelaySeconds: 10
                periodSeconds: 5
              resources:
                limits:
                  cpu: 300m
                  memory: 300Mi
                requests:
                  cpu: 50m
                  memory: 100Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /etc/config/clusterData.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: clusterData.json
                - mountPath: /etc/config/services.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: services.json
                - mountPath: /etc/config/capabilities.json
                  name: ks-capabilities
                  readOnly: true
                  subPath: capabilities.json
                - mountPath: /etc/config/matchingRules.json
                  name: cs-matching-rules
                  readOnly: true
                  subPath: matchingRules.json
                - mountPath: /etc/config/config.json
                  name: config
                  readOnly: true
                  subPath: config.json
                - mountPath: /etc/certs
                  name: tls-certs
                  readOnly: true
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: operator
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - name: tls-certs
              secret:
                secretName: kubescape-admission-webhook.kubescape.svc-kubescape-tls-pair
            - emptyDir: {}
              name: tmp-dir
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
            - configMap:
                items:
                  - key: capabilities
                    path: capabilities.json
                name: ks-capabilities
              name: ks-capabilities
            - configMap:
                items:
                  - key: config.json
                    path: config.json
                name: operator
              name: config
            - configMap:
                items:
                  - key: matchingRules.json
                    path: matchingRules.json
                name: cs-matching-rules
              name: cs-matching-rules
  51: |
    apiVersion: v1
    data:
      cronjobTemplate: "apiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: kubescape-scheduler\n  namespace: kubescape\n  labels:\n    app: kubescape-scheduler\n    tier: ks-control-plane\n    kubescape.io/ignore: \"true\"\n    kubescape.io/tier: \"core\"\n    armo.tier: \"kubescape-scan\"\nspec:\n  schedule: \"1 2 3 4 5\"\n  successfulJobsHistoryLimit: 3\n  failedJobsHistoryLimit: 1\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          labels:\n            armo.tier: \"kubescape-scan\"\n            kubescape.io/tier: \"core\"\n        spec:\n          containers:\n          - name: kubescape-scheduler\n            image: \"quay.io/kubescape/http-request:v0.2.6\"\n            imagePullPolicy: IfNotPresent\n            securityContext:\n              allowPrivilegeEscalation: false\n              readOnlyRootFilesystem: true\n              runAsNonRoot: true\n              runAsUser: 100\n            resources:\n              limits:\n                cpu: 10m\n                memory: 20Mi\n              requests:\n                cpu: 1m\n                memory: 10Mi\n            args: \n              - -method=post\n              - -scheme=http\n              - -host=operator:4002\n              - -path=v1/triggerAction\n              - -headers=Content-Type:application/json\n              - -path-body=/home/ks/request-body.json\n            volumeMounts:\n              - name: \"request-body-volume\"\n                mountPath: /home/ks/request-body.json\n                subPath: request-body.json\n                readOnly: true\n          restartPolicy: Never\n          automountServiceAccountToken: false\n          nodeSelector:\n          affinity:\n          tolerations:\n          volumes:\n            - name: \"request-body-volume\" # placeholder\n              configMap:\n                name: kubescape-scheduler"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubescape-cronjob-template
      namespace: kubescape
  52: |
    apiVersion: v1
    data:
      cronjobTemplate: "apiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: kubevuln-scheduler\n  namespace: kubescape\n  labels:\n    app: kubevuln-scheduler\n    kubescape.io/ignore: \"true\"\n    kubescape.io/tier: \"core\"\n    tier: ks-control-plane\n    armo.tier: \"vuln-scan\"\nspec:\n  schedule: \"1 2 3 4 5\" \n  successfulJobsHistoryLimit: 3\n  failedJobsHistoryLimit: 1\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          labels:\n            armo.tier: \"vuln-scan\"\n            kubescape.io/tier: \"core\"\n        spec:\n          containers:\n          - name: kubevuln-scheduler\n            image: \"quay.io/kubescape/http-request:v0.2.6\"\n            imagePullPolicy: IfNotPresent\n            securityContext:\n              allowPrivilegeEscalation: false\n              readOnlyRootFilesystem: true\n              runAsNonRoot: true\n              runAsUser: 100\n            resources:\n              limits:\n                cpu: 10m\n                memory: 20Mi\n              requests:\n                cpu: 1m\n                memory: 10Mi\n            args: \n              - -method=post\n              - -scheme=http\n              - -host=operator:4002\n              - -path=v1/triggerAction\n              - -headers=Content-Type:application/json\n              - -path-body=/home/ks/request-body.json\n            volumeMounts:\n              - name: \"request-body-volume\"\n                mountPath: /home/ks/request-body.json\n                subPath: request-body.json\n                readOnly: true\n          restartPolicy: Never\n          automountServiceAccountToken: false\n          nodeSelector:\n          affinity:\n          tolerations:\n          volumes:\n            - name: \"request-body-volume\" # placeholder\n              configMap:\n                name: kubevuln-scheduler"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubevuln-cronjob-template
      namespace: kubescape
  53: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: operator
        tier: ks-control-plane
      name: operator
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
        - ports:
            - port: 80
              protocol: TCP
          to:
            - ipBlock:
                cidr: 169.254.169.254/32
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  armo.tier: kubescape-scan
            - podSelector:
                matchLabels:
                  armo.tier: vuln-scan
          ports:
            - port: trigger-port
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: operator
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  54: |
    apiVersion: v1
    data:
      cronjobTemplate: "apiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: registry-scheduler\n  namespace: kubescape\n  labels:\n    app: registry-scheduler\n    kubescape.io/ignore: \"true\"\n    kubescape.io/tier: \"core\"\n    tier: ks-control-plane\n    armo.tier: \"registry-scan\"\nspec:\n  schedule: \"0 0 * * *\"\n  successfulJobsHistoryLimit: 3\n  failedJobsHistoryLimit: 1\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          labels:\n            armo.tier: \"registry-scan\"\n            kubescape.io/tier: \"core\"\n        spec:\n          containers:\n          - name: registry-scheduler\n            image: \"quay.io/kubescape/http-request:v0.2.6\"\n            imagePullPolicy: IfNotPresent\n            securityContext:\n              allowPrivilegeEscalation: false\n              readOnlyRootFilesystem: true\n              runAsNonRoot: true\n              runAsUser: 100\n            resources:\n              limits:\n                cpu: 10m\n                memory: 20Mi\n              requests:\n                cpu: 1m\n                memory: 10Mi\n            args: \n              - -method=post\n              - -scheme=http\n              - -host=operator:4002\n              - -path=v1/triggerAction\n              - -headers=Content-Type:application/json\n              - -path-body=/home/ks/request-body.json\n            volumeMounts:\n              - name: \"request-body-volume\"\n                mountPath: /home/ks/request-body.json\n                subPath: request-body.json\n                readOnly: true\n          restartPolicy: Never\n          automountServiceAccountToken: false\n          nodeSelector:\n          affinity:\n          tolerations:\n          volumes:\n            - name: \"request-body-volume\" # placeholder\n              configMap:\n                name: registry-scheduler"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: registry-scan-cronjob-template
      namespace: kubescape
  55: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
          - secrets
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
          - delete
      - apiGroups:
          - batch
        resources:
          - cronjobs
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
          - delete
  56: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: operator
    subjects:
      - kind: ServiceAccount
        name: operator
        namespace: kubescape
  57: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: operator
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
    spec:
      ports:
        - port: 4002
          protocol: TCP
          targetPort: 4002
      selector:
        app: operator
      type: ClusterIP
  58: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: operator
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
  59: |
    apiVersion: v1
    data:
      otel-collector-config.yaml: "\n# receivers configure how data gets into the Collector.\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n  hostmetrics:\n    collection_interval: 30s\n    scrapers:\n      cpu:\n      memory:\n\n# processors specify what happens with the received data.\nprocessors:\n  attributes/ksCloud:\n    actions:\n      - key: account_id\n        value: \"9e6c0c2c-6bd0-4919-815b-55030de7c9a0\"\n        action: upsert\n      - key: cluster_name\n        value: \"kind-kind\"\n        action: upsert\n  batch:\n    send_batch_size: 10000\n    timeout: 10s\n\n# exporters configure how to send processed data to one or more backends.\nexporters:\n  otlp/ksCloud:\n    endpoint: ${env:CLOUD_OTEL_COLLECTOR_URL}\n    tls:\n      insecure: false\n  otlp:\n    endpoint: \"otelCollector:4317\"\n    tls:\n      insecure: true\n    headers:\n      uptrace-dsn: \n\n# service pulls the configured receivers, processors, and exporters together into\n# processing pipelines. Unused receivers/processors/exporters are ignored.\nservice:\n  pipelines:\n    traces:\n      receivers: [otlp]\n      processors: [batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp\n    metrics/2:\n      receivers: [hostmetrics]\n      processors: [attributes/ksCloud, batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp\n    metrics:\n      receivers: [otlp]\n      processors: [attributes/ksCloud, batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp\n    logs:\n      receivers: [otlp]\n      processors: [attributes/ksCloud, batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: otel-collector-config
      namespace: kubescape
  60: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: otel-collector
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: otel-collector
        helm.sh/chart: kubescape-operator-1.18.16
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: otel-collector
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: otel-collector
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/otel-config: 58c3ed11c126dfdfb4f9eb16397879693b9ff765f540251bf548ee8d18e30497
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
          labels:
            app: otel-collector
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: otel-collector
            kubescape.io/tier: core
            tier: ks-control-plane
        spec:
          affinity: null
          containers:
            - command:
                - /otelcol
                - --config=/conf/otel-collector-config.yaml
              env:
                - name: CLOUD_OTEL_COLLECTOR_URL
                  valueFrom:
                    configMapKeyRef:
                      key: metrics
                      name: ks-cloud-config
                - name: GOMEMLIMIT
                  value: 500MiB
                - name: GOGC
                  value: "80"
              image: docker.io/otel/opentelemetry-collector:0.97.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                tcpSocket:
                  port: otlp
              name: otel-collector
              ports:
                - containerPort: 4317
                  name: otlp
                  protocol: TCP
                - containerPort: 4318
                  name: otlp-http
                  protocol: TCP
              readinessProbe:
                tcpSocket:
                  port: otlp
              resources:
                limits:
                  cpu: 1
                  memory: 1Gi
                requests:
                  cpu: 100m
                  memory: 500Mi
              securityContext:
                allowPrivilegeEscalation: false
                runAsNonRoot: true
                runAsUser: 100
              volumeMounts:
                - mountPath: /conf
                  name: otel-collector-config-volume
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          serviceAccountName: default
          tolerations: null
          volumes:
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - configMap:
                name: otel-collector-config
              name: otel-collector-config-volume
  61: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: otel-collector
        helm.sh/chart: kubescape-operator-1.18.16
        tier: ks-control-plane
      name: otel-collector
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 443
              protocol: TCP
            - port: 4317
              protocol: TCP
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  otel: enabled
          ports:
            - port: otlp
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: otel-collector
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  62: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: otel-collector
        kubescape.io/ignore: "true"
      name: otel-collector
      namespace: kubescape
    spec:
      ports:
        - name: otlp
          port: 4317
          protocol: TCP
          targetPort: 4317
        - name: otlp-http
          port: 4318
          protocol: TCP
          targetPort: 4318
      selector:
        app: otel-collector
      type: ClusterIP
  63: |
    apiVersion: v1
    data:
      proxy.crt: foo
    kind: Secret
    metadata:
      annotations:
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation
        helm.sh/hook-weight: "0"
      labels:
        kubescape.io/ignore: "true"
      name: kubescape-proxy-certificate
      namespace: kubescape
    type: Opaque
  64: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      annotations:
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "1"
      labels:
        app: service-discovery
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: service-discovery
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: service-discovery
      namespace: kubescape
    spec:
      template:
        metadata:
          labels:
            app: service-discovery
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: service-discovery
            helm.sh/chart: kubescape-operator-1.18.16
            otel: enabled
            tier: ks-control-plane
          name: RELEASE-NAME
        spec:
          affinity: null
          containers:
            - args:
                - |
                  kubectl create configmap ks-cloud-config --from-literal=metrics=$(jq -r '.response.metrics' /data/services.json) --from-file=services=/data/services.json -n kubescape --dry-run=client -o yaml | kubectl patch configmap ks-cloud-config --patch "$(cat -)" -n kubescape
              command:
                - /bin/sh
                - -c
              image: docker.io/bitnami/kubectl:1.27.6
              imagePullPolicy: IfNotPresent
              name: update-configmap
              resources:
                limits:
                  cpu: 100m
                  memory: 50Mi
                requests:
                  cpu: 10m
                  memory: 10Mi
              volumeMounts:
                - mountPath: /data
                  name: shared-data
          initContainers:
            - args:
                - -method=get
                - -scheme=https
                - -host=api.armosec.io
                - -path=api/v2/servicediscovery
                - -path-output=/data/services.json
              env: null
              image: quay.io/kubescape/http-request:v0.2.6
              imagePullPolicy: IfNotPresent
              name: url-discovery
              resources:
                limits:
                  cpu: 100m
                  memory: 50Mi
                requests:
                  cpu: 10m
                  memory: 10Mi
              volumeMounts:
                - mountPath: /data
                  name: shared-data
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          restartPolicy: Never
          serviceAccountName: service-discovery
          tolerations: null
          volumes:
            - emptyDir: {}
              name: shared-data
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
  65: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      annotations:
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "0"
      labels:
        kubescape.io/ignore: "true"
      name: service-discovery
      namespace: kubescape
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - update
          - create
          - patch
          - get
          - list
  66: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      annotations:
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "0"
      labels:
        kubescape.io/ignore: "true"
      name: service-discovery
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: service-discovery
    subjects:
      - kind: ServiceAccount
        name: service-discovery
        namespace: kubescape
  67: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations:
        helm.sh/hook: pre-install,pre-upgrade
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "0"
      labels:
        kubescape.io/ignore: "true"
      name: service-discovery
      namespace: kubescape
  68: |
    apiVersion: apiregistration.k8s.io/v1
    kind: APIService
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: v1beta1.spdx.softwarecomposition.kubescape.io
    spec:
      group: spdx.softwarecomposition.kubescape.io
      groupPriorityMinimum: 1000
      insecureSkipTLSVerify: true
      service:
        name: storage
        namespace: kubescape
      version: v1beta1
      versionPriority: 15
  69: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
          - endpoints
          - namespaces
          - nodes
          - persistentvolumeclaims
          - persistentvolumes
          - pods
          - secrets
          - serviceaccounts
          - services
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - admissionregistration.k8s.io
        resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apiregistration.k8s.io
        resources:
          - apiservices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - cronjobs
          - jobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - discovery.k8s.io
        resources:
          - endpointslices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - flowcontrol.apiserver.k8s.io
        resources:
          - prioritylevelconfigurations
          - flowschemas
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - clusterroles
          - clusterrolebindings
          - roles
          - rolebindings
        verbs:
          - get
          - watch
          - list
  70: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage:system:auth-delegator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subjects:
      - kind: ServiceAccount
        name: storage
        namespace: kubescape
  71: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: storage
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: storage
    subjects:
      - kind: ServiceAccount
        name: storage
        namespace: kubescape
  72: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/component: apiserver
        app.kubernetes.io/name: storage
        app.kubernetes.io/part-of: kubescape-storage
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
      name: storage
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: apiserver
          app.kubernetes.io/name: storage
          app.kubernetes.io/part-of: kubescape-storage
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app.kubernetes.io/component: apiserver
            app.kubernetes.io/name: storage
            app.kubernetes.io/part-of: kubescape-storage
            kubescape.io/tier: core
            otel: enabled
        spec:
          affinity: null
          containers:
            - env:
                - name: CLEANUP_INTERVAL
                  value: 6h
                - name: GOMEMLIMIT
                  value: 1200MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/storage:v0.0.85
              imagePullPolicy: IfNotPresent
              livenessProbe:
                tcpSocket:
                  port: 8443
              name: apiserver
              readinessProbe:
                tcpSocket:
                  port: 8443
              resources:
                limits:
                  cpu: 1500m
                  memory: 1500Mi
                requests:
                  cpu: 100m
                  memory: 400Mi
              securityContext:
                allowPrivilegeEscalation: false
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /data
                  name: data
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: storage
          tolerations: null
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: kubescape-storage
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
  73: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app.kubernetes.io/component: apiserver
        app.kubernetes.io/name: storage
        app.kubernetes.io/part-of: kubescape-storage
        kubescape.io/ignore: "true"
      name: kubescape-storage
      namespace: kubescape
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
  74: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage-auth-reader
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: extension-apiserver-authentication-reader
    subjects:
      - kind: ServiceAccount
        name: storage
        namespace: kubescape
  75: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage
      namespace: kubescape
    spec:
      ports:
        - port: 443
          protocol: TCP
          targetPort: 8443
      selector:
        app.kubernetes.io/component: apiserver
        app.kubernetes.io/name: storage
        app.kubernetes.io/part-of: kubescape-storage
  76: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage
      namespace: kubescape
  77: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: synchronizer
    rules:
      - apiGroups:
          - storage.k8s.io
        resources:
          - storageclasses
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - rolebindings
          - clusterrolebindings
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - pods
          - namespaces
          - nodes
          - configmaps
          - persistentvolumes
          - services
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - apps
        resources:
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - networking.k8s.io
        resources:
          - networkpolicies
          - ingresses
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - applicationactivities
          - applicationprofiles
          - networkneighborses
          - networkneighborhoods
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - knownservers
        verbs:
          - get
          - watch
          - list
          - create
          - update
          - patch
          - delete
      - apiGroups:
          - cilium.io
        resources:
          - ciliumnetworkpolicies
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - projectcalico.org
        resources:
          - networkpolicies
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - gateway.networking.k8s.io
        resources:
          - httproutes
          - tcproutes
          - udproutes
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - kubescape.io
        resources:
          - serviceauthentication
        verbs:
          - get
          - watch
          - list
  78: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: synchronizer
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: synchronizer
    subjects:
      - kind: ServiceAccount
        name: synchronizer
        namespace: kubescape
  79: |
    apiVersion: v1
    data:
      config.json: |-
        {
          "inCluster": {
            "resources": [
              {
                "group": "",
                "version": "v1",
                "resource": "services",
                "strategy": "patch"
              },
              {
                "group": "networking.k8s.io",
                "version": "v1",
                "resource": "ingresses",
                "strategy": "patch"
              },
              {
                "group": "gateway.networking.k8s.io",
                "version": "v1",
                "resource": "httproutes",
                "strategy": "patch"
              },
              {
                "group": "gateway.networking.k8s.io",
                "version": "v1",
                "resource": "tcproutes",
                "strategy": "patch"
              },
              {
                "group": "gateway.networking.k8s.io",
                "version": "v1",
                "resource": "udproutes",
                "strategy": "patch"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "version": "v1",
                "resource": "rolebindings",
                "strategy": "patch"
              },
              {
                "group": "rbac.authorization.k8s.io",
                "version": "v1",
                "resource": "clusterrolebindings",
                "strategy": "patch"
              },
              {
                "group": "",
                "version": "v1",
                "resource": "persistentvolumes",
                "strategy": "patch"
              },
              {
                "group": "storage.k8s.io",
                "version": "v1",
                "resource": "storageclasses",
                "strategy": "patch"
              },
              {
                "group": "apps",
                "version": "v1",
                "resource": "deployments",
                "strategy": "patch"
              },
              {
                "group": "apps",
                "version": "v1",
                "resource": "statefulsets",
                "strategy": "patch"
              },
              {
                "group": "apps",
                "version": "v1",
                "resource": "daemonsets",
                "strategy": "patch"
              },
              {
                "group": "apps",
                "version": "v1",
                "resource": "replicasets",
                "strategy": "patch"
              },
              {
                "group": "batch",
                "version": "v1",
                "resource": "jobs",
                "strategy": "patch"
              },
              {
                "group": "batch",
                "version": "v1",
                "resource": "cronjobs",
                "strategy": "patch"
              },
              {
                "group": "",
                "version": "v1",
                "resource": "pods",
                "strategy": "patch"
              },
              {
                "group": "",
                "version": "v1",
                "resource": "namespaces",
                "strategy": "patch"
              },
              {
                "group": "",
                "version": "v1",
                "resource": "nodes",
                "strategy": "patch"
              },
              {
                "group": "",
                "version": "v1",
                "resource": "configmaps",
                "strategy": "patch"
              },
              {
                "group": "networking.k8s.io",
                "version": "v1",
                "resource": "networkpolicies",
                "strategy": "patch"
              },
              {
                "group": "spdx.softwarecomposition.kubescape.io",
                "version": "v1beta1",
                "resource": "applicationactivities",
                "strategy": "copy"
              },
              {
                "group": "spdx.softwarecomposition.kubescape.io",
                "version": "v1beta1",
                "resource": "applicationprofiles",
                "strategy": "copy"
              },
              {
                "group": "spdx.softwarecomposition.kubescape.io",
                "version": "v1beta1",
                "resource": "knownservers",
                "strategy": "copy"
              },
              {
                "group": "spdx.softwarecomposition.kubescape.io",
                "version": "v1beta1",
                "resource": "networkneighborses",
                "strategy": "copy"
              },
              {
                "group": "spdx.softwarecomposition.kubescape.io",
                "version": "v1beta1",
                "resource": "networkneighborhoods",
                "strategy": "copy"
              },
              {
                "group": "cilium.io",
                "version": "v2",
                "resource": "ciliumnetworkpolicies",
                "strategy": "patch"
              },
              {
                "group": "projectcalico.org",
                "version": "v3",
                "resource": "networkpolicies",
                "strategy": "patch"
              },
              {
                "group": "kubescape.io",
                "version": "v1",
                "resource": "serviceauthentication",
                "strategy": "patch"
              }
            ]
          },
          "httpEndpoint": {
            "serverPort": "8089",
            "resources": [
              {
                "group": "kubescape.io",
                "version": "v1",
                "resource": "nodeprofiles",
                "strategy": "copy"
              },
              {
                "group": "kubescape.io",
                "version": "v1",
                "resource": "runtimealerts",
                "strategy": "copy"
              }
            ]
          }
        }
    kind: ConfigMap
    metadata:
      labels:
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
      name: synchronizer
      namespace: kubescape
  80: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: synchronizer
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: synchronizer
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: synchronizer
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: synchronizer
          tier: ks-control-plane
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            checksum/cloud-config: 98e72a3a1a24264d2cdebc86b61829ee5b941fb590d6ca717ebaa880922046c6
            checksum/cloud-secret: 8665d3f0f7282091716b5fbf7356972eb83a5a9e86eb064218d24e9f66612b99
            checksum/proxy-config: 30e81a4193016803b4b7985b92028c4797c1e84d317a4b6b3e3a5406139f8847
            checksum/synchronizer-configmap: 737f16e4477c76d1da6e50bea7340999fd7607a74e2121cd9b98e27155f6880f
          labels:
            app: synchronizer
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: synchronizer
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - command:
                - /usr/bin/client
              env:
                - name: HELM_RELEASE
                  value: kubescape-operator-1.18.16
                - name: GOMEMLIMIT
                  value: 250MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/synchronizer:v0.0.72
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 7888
                initialDelaySeconds: 3
                periodSeconds: 3
              name: synchronizer
              resources:
                limits:
                  cpu: 200m
                  memory: 500Mi
                requests:
                  cpu: 100m
                  memory: 250Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /etc/config/clusterData.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: clusterData.json
                - mountPath: /etc/config/services.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: services.json
                - mountPath: /etc/config/config.json
                  name: config
                  readOnly: true
                  subPath: config.json
                - mountPath: /etc/ssl/certs/proxy.crt
                  name: proxy-secret
                  subPath: proxy.crt
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: synchronizer
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: proxy-secret
              secret:
                secretName: kubescape-proxy-certificate
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                  - key: services
                    path: services.json
                name: ks-cloud-config
              name: ks-cloud-config
            - configMap:
                items:
                  - key: config.json
                    path: config.json
                name: synchronizer
              name: config
  81: |
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      labels:
        app: synchronizer
        tier: ks-control-plane
      name: synchronizer
      namespace: kubescape
    spec:
      egress:
        - ports:
            - port: 8443
              protocol: TCP
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  app.kubernetes.io/instance: kubecop
                  app.kubernetes.io/name: kubecop
          ports:
            - port: 8089
              protocol: TCP
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: synchronizer
          tier: ks-control-plane
      policyTypes:
        - Ingress
        - Egress
  82: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: synchronizer
        kubescape.io/ignore: "true"
      name: synchronizer
      namespace: kubescape
    spec:
      ports:
        - port: 8089
          protocol: TCP
          targetPort: 8089
      selector:
        app: synchronizer
      type: ClusterIP
  83: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: synchronizer
        kubescape.io/ignore: "true"
      name: synchronizer
      namespace: kubescape
minimal capabilities:
  1: |
    raw: "Thank you for installing kubescape-operator version 1.18.16.\n\n\n\n\nView your image vulnerabilities scan summaries:\n> kubectl get vulnerabilitymanifestsummaries -A\n\nDetailed reports are also available:\n> kubectl get vulnerabilitymanifests -A\n\nkubescape-operator generates suggested network policies. To view them:  \n> kubectl get generatednetworkpolicies -n <namespace>\n\n"
  2: |
    apiVersion: v1
    data:
      accessKey: ""
      account: ""
    kind: Secret
    metadata:
      labels:
        app: cloud-secret
        kubescape.io/ignore: "true"
        kubescape.io/infra: credentials
        tier: ks-control-plane
      name: cloud-secret
      namespace: kubescape
    type: Opaque
  3: |
    apiVersion: v1
    data:
      clusterData: |
        {
          "serviceDiscovery": false,
          "gatewayWebsocketURL": "gateway:8001",
          "gatewayRestURL": "gateway:8002",
          "vulnScanURL": "kubevuln:8080",
          "kubevulnURL": "kubevuln:8080",
          "kubescapeURL": "kubescape:8080",
          "clusterName": "kind-kind",
          "storage": true,
          "relevantImageVulnerabilitiesEnabled": true,
          "namespace": "kubescape",
          "imageVulnerabilitiesScanningEnabled": true,
          "postureScanEnabled": true,
          "otelCollector": true,
          "nodeAgent": "true",
          "maxImageSize": 5.36870912e+09,
          "maxSBOMSize": 2.097152e+07,
          "keepLocal": true,
          "scanTimeout": "5m",
          "vexGeneration": false,
          "continuousPostureScan": false,
          "relevantImageVulnerabilitiesConfiguration": "enable"
        }
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/infra: config
        kubescape.io/tier: core
        tier: ks-control-plane
      name: ks-cloud-config
      namespace: kubescape
  4: |
    apiVersion: v1
    data:
      capabilities: |
        {
          "capabilities":{"admissionController":"disable","autoUpgrading":"disable","configurationScan":"enable","continuousScan":"disable","enableServiceAuth":false,"malwareDetection":"disable","networkPolicyService":"enable","nodeProfileService":"disable","nodeScan":"enable","prometheusExporter":"disable","relevancy":"enable","runtimeDetection":"disable","runtimeObservability":"enable","vexGeneration":"disable","vulnerabilityScan":"enable"},
          "components":{"clamAV":{"enabled":false},"cloudSecret":{"create":true,"name":"cloud-secret"},"customCaCertificates":{"name":"custom-ca-certificates"},"gateway":{"enabled":false},"hostScanner":{"enabled":true},"kollector":{"enabled":false},"kubescape":{"enabled":true},"kubescapeScheduler":{"enabled":false},"kubevuln":{"enabled":true},"kubevulnScheduler":{"enabled":false},"nodeAgent":{"enabled":true},"operator":{"enabled":true},"otelCollector":{"enabled":true},"prometheusExporter":{"enabled":false},"serviceDiscovery":{"enabled":false},"storage":{"enabled":true},"synchronizer":{"enabled":false}},
          "configurations":{"otelUrl":"otelCollector:4317","persistence":"enable","priorityClass":{"daemonset":100000100,"enabled":true},"prometheusAnnotations":"disable"}
        }
    kind: ConfigMap
    metadata:
      labels:
        app: ks-capabilities
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: ks-capabilities
      namespace: kubescape
  5: |
    apiVersion: v1
    data:
      matchingRules.json: |
        {"match":[{"apiGroups":["apps"],"apiVersions":["v1"],"resources":["deployments"]}],"namespaces":["default"]}
    kind: ConfigMap
    metadata:
      labels:
        app: kubescape
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: cs-matching-rules
      namespace: kubescape
  6: |
    apiVersion: scheduling.k8s.io/v1
    description: This priority class is for node-agent daemonset pods
    globalDefault: false
    kind: PriorityClass
    metadata:
      name: kubescape-critical
    value: 1.000001e+08
  7: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - pods/proxy
          - namespaces
          - secrets
          - nodes
          - configmaps
          - services
          - serviceaccounts
          - endpoints
          - persistentvolumeclaims
          - persistentvolumes
          - limitranges
          - replicationcontrollers
          - podtemplates
          - resourcequotas
          - events
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - admissionregistration.k8s.io
        resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apiregistration.k8s.io
        resources:
          - apiservices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - deployments
          - statefulsets
          - daemonsets
          - replicasets
          - controllerrevisions
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - autoscaling
        resources:
          - horizontalpodautoscalers
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - discovery.k8s.io
        resources:
          - endpointslices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - events.k8s.io
        resources:
          - events
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - hostdata.kubescape.cloud
        resources:
          - APIServerInfo
          - ControlPlaneInfo
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - networking.k8s.io
        resources:
          - networkpolicies
          - Ingress
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - policy
        resources:
          - poddisruptionbudgets
          - podsecuritypolicies
          - PodSecurityPolicy
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - clusterroles
          - clusterrolebindings
          - roles
          - rolebindings
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - storage.k8s.io
        resources:
          - csistoragecapacities
          - storageclasses
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - networking.k8s.io
        resources:
          - ingresses
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - extensions
        resources:
          - Ingress
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - gateway.networking.k8s.io
        resources:
          - httproutes
          - gateways
          - gatewayclasses
          - tcproutes
          - tlsroutes
          - udproutes
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - ""
        resources:
          - namespaces
        verbs:
          - update
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - workloadconfigurationscans
          - workloadconfigurationscansummaries
        verbs:
          - create
          - update
          - patch
      - apiGroups:
          - kubescape.io
        resources:
          - serviceauthentication
        verbs:
          - get
          - watch
          - list
  8: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kubescape
    subjects:
      - kind: ServiceAccount
        name: kubescape
        namespace: kubescape
  9: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: kubescape
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: kubescape
        helm.sh/chart: kubescape-operator-1.18.16
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubescape
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kubescape
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/cloud-config: c8580dbb81fa1c832dc787a966fc068feacfb2ee7f67fdd928c256f4094ad656
            checksum/cloud-secret: baefa7c2a6f06e1afdaffb0829d1caf36ff7428773197f1e5ca4731c132ecb78
            checksum/host-scanner-configmap: cb6c9f6c0baf504f7e8b4b5daf0c3a84cdf0cf21e3a098be67e57fdcd2db8ac9
          labels:
            app: kubescape
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: kubescape
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - command:
                - ksserver
              env:
                - name: GOMEMLIMIT
                  value: 400MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: KS_DOWNLOAD_ARTIFACTS
                  value: "true"
                - name: RULE_PROCESSING_GOMAXPROCS
                  value: ""
                - name: KS_DEFAULT_CONFIGMAP_NAME
                  value: kubescape-config
                - name: KS_DEFAULT_CONFIGMAP_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: KS_CONTEXT
                  value: kind-kind
                - name: KS_DEFAULT_CLOUD_CONFIGMAP_NAME
                  value: ks-cloud-config
                - name: KS_ENABLE_HOST_SCANNER
                  value: "true"
                - name: KS_SKIP_UPDATE_CHECK
                  value: "false"
                - name: KS_HOST_SCAN_YAML
                  value: /home/nonroot/.kubescape/host-scanner.yaml
                - name: LARGE_CLUSTER_SIZE
                  value: "1500"
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/kubescape:v3.0.11
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /livez
                  port: 8080
                initialDelaySeconds: 3
                periodSeconds: 3
              name: kubescape
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 8080
                initialDelaySeconds: 3
                periodSeconds: 3
              resources:
                limits:
                  cpu: 600m
                  memory: 1Gi
                requests:
                  cpu: 250m
                  memory: 400Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /home/nonroot/.kubescape
                  name: kubescape-volume
                  subPath: config.json
                - mountPath: /home/nonroot/.kubescape/host-scanner.yaml
                  name: host-scanner-definition
                  subPath: host-scanner-yaml
                - mountPath: /home/nonroot/results
                  name: results
                - mountPath: /home/nonroot/failed
                  name: failed
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: kubescape
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                name: ks-cloud-config
              name: ks-cloud-config
            - configMap:
                name: host-scanner-definition
              name: host-scanner-definition
            - emptyDir: {}
              name: kubescape-volume
            - emptyDir: {}
              name: results
            - emptyDir: {}
              name: failed
  10: |
    apiVersion: v1
    data:
      host-scanner-yaml: |-
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          name: host-scanner
          namespace: kubescape
          labels:
            app: host-scanner
            k8s-app: kubescape-host-scanner
        spec:
          selector:
            matchLabels:
              name: host-scanner
          template:
            metadata:
              labels:
                kubescape.io/ignore: "true"
                kubescape.io/tier: "core"
                name: host-scanner
                otel: enabled
            spec:
              nodeSelector:
              affinity:
              tolerations:
                - effect: NoSchedule
                  key: node-role.kubernetes.io/control-plane
                  operator: Exists
                - effect: NoSchedule
                  key: node-role.kubernetes.io/master
                  operator: Exists
              containers:
              - name: host-sensor
                image: "quay.io/kubescape/host-scanner:v1.0.66"
                imagePullPolicy: IfNotPresent
                securityContext:
                  allowPrivilegeEscalation: true
                  privileged: true
                  readOnlyRootFilesystem: true
                  procMount: Unmasked
                env:
                - name: KS_LOGGER_LEVEL
                  value: "info"
                - name: KS_LOGGER_NAME
                  value: "zap"
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      name: cloud-secret
                      key: account
                - name: CLUSTER_NAME
                  value: "kind-kind"
                - name: OTEL_COLLECTOR_SVC
                  value: "otel-collector.kubescape.svc:4317"
                ports:
                  - name: scanner # Do not change port name
                    containerPort: 7888
                    protocol: TCP
                resources:
                  limits:
                    cpu: 0.4m
                    memory: 400Mi
                  requests:
                    cpu: 0.1m
                    memory: 200Mi
                volumeMounts:
                - mountPath: /host_fs
                  name: host-filesystem
                startupProbe:
                  httpGet:
                    path: /readyz
                    port: 7888
                  failureThreshold: 30
                  periodSeconds: 1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 7888
                  periodSeconds: 10
              terminationGracePeriodSeconds: 120
              dnsPolicy: ClusterFirstWithHostNet
              automountServiceAccountToken: false
              volumes:
              - hostPath:
                  path: /
                  type: Directory
                name: host-filesystem
              hostPID: true
              hostIPC: true
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: host-scanner-definition
      namespace: kubescape
  11: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
    rules:
      - apiGroups:
          - apps
        resources:
          - daemonsets
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
          - delete
  12: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: kubescape
    subjects:
      - kind: ServiceAccount
        name: kubescape
        namespace: kubescape
  13: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: kubescape
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
    spec:
      ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: kubescape
      type: ClusterIP
  14: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: kubescape
        kubescape.io/ignore: "true"
      name: kubescape
      namespace: kubescape
  15: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubevuln
    rules:
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - vulnerabilitymanifests
          - vulnerabilitymanifestsummaries
          - openvulnerabilityexchangecontainers
          - sbomsyfts
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - sbomsyftfiltereds
        verbs:
          - get
          - watch
          - list
  16: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubevuln
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kubevuln
    subjects:
      - kind: ServiceAccount
        name: kubevuln
        namespace: kubescape
  17: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: kubevuln
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: kubevuln
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubevuln
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: kubevuln
          tier: ks-control-plane
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            checksum/cloud-config: c8580dbb81fa1c832dc787a966fc068feacfb2ee7f67fdd928c256f4094ad656
            checksum/cloud-secret: baefa7c2a6f06e1afdaffb0829d1caf36ff7428773197f1e5ca4731c132ecb78
          labels:
            app: kubevuln
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: kubevuln
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - args:
                - -alsologtostderr
                - -v=4
                - 2>&1
              env:
                - name: GOMEMLIMIT
                  value: 1000MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: PRINT_POST_JSON
                  value: ""
                - name: CA_MAX_VULN_SCAN_ROUTINES
                  value: "1"
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/kubevuln:v0.3.25
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /v1/liveness
                  port: 8080
                initialDelaySeconds: 3
                periodSeconds: 3
              name: kubevuln
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /v1/readiness
                  port: 8080
              resources:
                limits:
                  cpu: 1500m
                  ephemeral-storage: 10Gi
                  memory: 5000Mi
                requests:
                  cpu: 300m
                  ephemeral-storage: 5Gi
                  memory: 1000Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /home/nonroot/anchore-resources/db
                  name: grype-db-cache
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
                - mountPath: /home/nonroot/.cache/grype
                  name: grype-db
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: kubevuln
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - emptyDir: {}
              name: tmp-dir
            - emptyDir: {}
              name: grype-db-cache
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                name: ks-cloud-config
              name: ks-cloud-config
            - emptyDir: {}
              name: grype-db
  18: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: kubevuln
        kubescape.io/ignore: "true"
      name: kubevuln
      namespace: kubescape
    spec:
      ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app: kubevuln
      type: ClusterIP
  19: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: kubevuln
        kubescape.io/ignore: "true"
      name: kubevuln
      namespace: kubescape
  20: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: node-agent
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - nodes
          - services
          - endpoints
          - namespaces
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - deployments
          - daemonsets
          - statefulsets
          - replicasets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - sbomsyfts
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - applicationactivities
          - applicationprofiles
          - networkneighborses
          - networkneighborhoods
          - sbomsyftfiltereds
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
      - apiGroups:
          - kubescape.io
        resources:
          - runtimerulealertbindings
        verbs:
          - list
          - watch
  21: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: node-agent
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: node-agent
    subjects:
      - kind: ServiceAccount
        name: node-agent
        namespace: kubescape
  22: |
    apiVersion: v1
    data:
      config.json: |
        {
            "applicationProfileServiceEnabled": true,
            "relevantCVEServiceEnabled": true,
            "prometheusExporterEnabled": false,
            "runtimeDetectionEnabled": false,
            "networkServiceEnabled": true,
            "malwareDetectionEnabled": false,
            "nodeProfileServiceEnabled": false,
            "initialDelay": "2m",
            "updateDataPeriod": "10m",
            "nodeProfileInterval": "10m",
            "maxSniffingTimePerContainer": "24h",
            "exporters": {
              "httpExporterConfig":{"maxAlertsPerMinute":1000,"method":"POST","url":"http://synchronizer:8089/apis/v1/kubescape.io"},
              "alertManagerExporterUrls":[],
              "stdoutExporter":true,
              "syslogExporterURL": ""
            }
        }
    kind: ConfigMap
    metadata:
      labels:
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
      name: node-agent
      namespace: kubescape
  23: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        app: node-agent
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: node-agent
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: node-agent
      namespace: kubescape
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: node-agent
          tier: ks-control-plane
      template:
        metadata:
          annotations:
            checksum/cloud-config: c8580dbb81fa1c832dc787a966fc068feacfb2ee7f67fdd928c256f4094ad656
            checksum/cloud-secret: baefa7c2a6f06e1afdaffb0829d1caf36ff7428773197f1e5ca4731c132ecb78
            checksum/node-agent-config: 3ccfb3467579f1c6849389829a0d66deab8589e05e2e05dfdbc4c2b6d64ff16a
            container.apparmor.security.beta.kubernetes.io/node-agent: unconfined
          labels:
            alt-name: node-agent
            app: node-agent
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: node-agent
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/os
                        operator: In
                        values:
                          - linux
          automountServiceAccountToken: true
          containers:
            - env:
                - name: GOMEMLIMIT
                  value: 600MiB
                - name: HOST_ROOT
                  value: /host
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4318
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: NAMESPACE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: NodeName
              image: quay.io/kubescape/node-agent:v0.2.81
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /livez
                  port: 7888
                initialDelaySeconds: 3
                periodSeconds: 3
              name: node-agent
              readinessProbe:
                httpGet:
                  path: /readyz
                  port: 7888
                initialDelaySeconds: 3
                periodSeconds: 3
              resources:
                limits:
                  cpu: 500m
                  memory: 700Mi
                requests:
                  cpu: 100m
                  memory: 180Mi
              securityContext:
                capabilities:
                  add:
                    - SYS_ADMIN
                    - SYS_PTRACE
                    - NET_ADMIN
                    - SYSLOG
                    - SYS_RESOURCE
                    - IPC_LOCK
                    - NET_RAW
                privileged: false
                runAsUser: 0
                seLinuxOptions:
                  type: spc_t
              volumeMounts:
                - mountPath: /host
                  name: host
                - mountPath: /run
                  name: run
                - mountPath: /lib/modules
                  name: modules
                - mountPath: /sys/kernel/debug
                  name: debugfs
                - mountPath: /sys/fs/cgroup
                  name: cgroup
                - mountPath: /sys/fs/bpf
                  name: bpffs
                - mountPath: /data
                  name: data
                - mountPath: /clamav
                  name: clamrun
                  readOnly: false
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /etc/config/clusterData.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: clusterData.json
                - mountPath: /etc/config/config.json
                  name: config
                  readOnly: true
                  subPath: config.json
          hostPID: true
          nodeSelector:
            kubernetes.io/os: linux
          priorityClassName: kubescape-critical
          serviceAccountName: node-agent
          tolerations: null
          volumes:
            - hostPath:
                path: /
              name: host
            - hostPath:
                path: /run
              name: run
            - hostPath:
                path: /sys/fs/cgroup
              name: cgroup
            - hostPath:
                path: /lib/modules
              name: modules
            - hostPath:
                path: /sys/fs/bpf
              name: bpffs
            - hostPath:
                path: /sys/kernel/debug
              name: debugfs
            - emptyDir: null
              name: data
            - emptyDir: {}
              name: clamdb
            - emptyDir: {}
              name: clamrun
            - configMap:
                items:
                  - key: clamd.conf
                    path: clamd.conf
                  - key: freshclam.conf
                    path: freshclam.conf
                name: clamav
              name: etc
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                name: ks-cloud-config
              name: ks-cloud-config
            - configMap:
                items:
                  - key: config.json
                    path: config.json
                name: node-agent
              name: config
  24: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: node-agent
        app.kubernetes.io/name: node-agent
        kubescape.io/ignore: "true"
      name: node-agent
      namespace: kubescape
    spec:
      ports:
        - name: prometheus
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        app.kubernetes.io/name: node-agent
  25: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: node-agent
      namespace: kubescape
  26: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: operator
        kubescape.io/ignore: "true"
      name: kubescape-admission-webhook
      namespace: kubescape
    spec:
      ports:
        - port: 443
          targetPort: 8443
      selector:
        app: operator
      type: ClusterIP
  27: |
    apiVersion: v1
    data:
      tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjRENDQWxpZ0F3SUJBZ0lRTkhMaFFsMGNuSE9YNjVLT1hrT3o1akFOQmdrcWhraUc5dzBCQVFzRkFEQWEKTVJnd0ZnWURWUVFEREE4cUxrNUJUVVZUVUVGRFJTNXpkbU13SGhjTk1qUXdOakU1TURnek9UQTRXaGNOTWpjdwpOREE1TURnek9UQTRXakEwTVRJd01BWURWUVFERXlscmRXSmxjMk5oY0dVdFlXUnRhWE56YVc5dUxYZGxZbWh2CmIyc3VUa0ZOUlZOUVFVTkZMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUpZZGlabG50dERBTVliNklFNFFFWlV3QnpKMHYwdHFrQ0xkRjcwK1plRTN3eWNaZlBQeVVHV1lWblo0ODJUOAptMjMvN1EwQTY0ai9Ba1NnVk5rNlc3cXlaQVQ0U2lTYlFTajI4S3VobWJEZnJPWWNnRWo0ZTBTM0ZCZ2kyWGxICjY2djYxc1VZV2crNFZqVkpEMndXWW9QeFJ5M0JYSGZRSVJoeEpiSHlLcWZCZUwzS0pPQmwyajhxUThST0pWRGEKb0NPaGdORnBwTWcwK2I1c2FhUm9jWklGUmQ2OFF1Z3JZb3YvV29GdGZYY01MMmI3VmNoWXJjdUs5VGpaRHYwWQptYmp1aWFLYlZvam1ZL3o2UkthUldYb0FhZ3JZS0hIMFc0T0hUYWEyekwyeXRKWHhUWVlQNytuL01WWmN5dzBtClRZczc5RDlBWVpKVFRWMG5YTThPOGcwQ0F3RUFBYU9CbHpDQmxEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWUQKVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwagpCQmd3Rm9BVXRLa082ellXeURtQW96WXJJVzRURzM5ZzNpWXdOQVlEVlIwUkJDMHdLNElwYTNWaVpYTmpZWEJsCkxXRmtiV2x6YzJsdmJpMTNaV0pvYjI5ckxrNUJUVVZUVUVGRFJTNXpkbU13RFFZSktvWklodmNOQVFFTEJRQUQKZ2dFQkFIUzZOMXVtTFg4aUEzUCtkSG0remh0UTFGeVV5eHRLSU42cEorcUs1VVBlZDVOUXM5cHRUbk1qeHdRWQp4ZHBvbkRGT2NldUpVT0IxZ29Yd3pibUtTMTJRTGFteUdSME9qaGpBOTEyajNyeUI0aTZmZWtLbDJVWUkxdStoCnhHMHVlSVY5aXZ3T0tjNUtlZEc5SlAvT1NoMUxneTQvaXBnOFcyUzY5MFRSOEpHK3JVVVQxOWJQUHZQS3R5Mm8KTUdGNkZKR2dNZUNxeWx6R2trSy96TWVaem9xaWhJMFNnMGNnT29QeVJnT3NJQ0ZTNyt2RTd2QzZLa2FBMmJicApvY1I1SFdyRUxmdDR1UmFmbFBIRXZVVnVCNnVaVThTUFc4MUJCVXVLemR5VlBoNytzeW56MkdSQWZ4NjBVc0t3CjNFQzAvNDFVT2ZMTUJlWlZSOEQxbmoxYWlvWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbGgySm1XZTIwTUF4aHZvZ1RoQVJsVEFITW5TL1MycVFJdDBYdlQ1bDRUZkRKeGw4CjgvSlFaWmhXZG5qelpQeWJiZi90RFFEcmlQOENSS0JVMlRwYnVySmtCUGhLSkp0QktQYndxNkdac04rczVoeUEKU1BoN1JMY1VHQ0xaZVVmcnEvcld4UmhhRDdoV05Va1BiQlppZy9GSExjRmNkOUFoR0hFbHNmSXFwOEY0dmNvawo0R1hhUHlwRHhFNGxVTnFnSTZHQTBXbWt5RFQ1dm14cHBHaHhrZ1ZGM3J4QzZDdGlpLzlhZ1cxOWR3d3ZadnRWCnlGaXR5NHIxT05rTy9SaVp1TzZKb3B0V2lPWmovUHBFcHBGWmVnQnFDdGdvY2ZSYmc0ZE5wcmJNdmJLMGxmRk4KaGcvdjZmOHhWbHpMRFNaTml6djBQMEJoa2xOTlhTZGN6dzd5RFFJREFRQUJBb0lCQUJXbFNMUVFHbkpiWkVqYwpSRkE5VE92QU15bDVZQ1FWeDViZlhvN3hNbXVaU05DWWdrWUN5TWo5Z0dvdzRwZkxQUFpOa3ZidkRRZUNEZWVyClh0Qzc4NEltT3Zua2UzeHZ6cU9EaUF5WGpydk1aUGdCWUJZbGpsRElQV09Ga3VwRURwMkwyL0FycE1EamlickIKUURJTHdFVGFRN003VUlRT1JOZHJhVTRSWjBrdENocHVqbElpNUpvK2k0VDVRMys1cTFabEZpWmEwM0s2UUpLTApEL3dxOW10aThCd096Y2xsSUh3TDZsV0JzNHpITFhCSTBLcmVPNXBwY3VZUWxZU2tuOGRmbzdWU0U3SUhIOHRkCjd0NkIxTm92Sk9SalZVR1JHZUR1cm5iQ1NpWnBOaGZTUnRKU3o0bC9lQ2JzWUNESHJEVXhzSjBXd0cyZldGWTMKUk1VUjk5a0NnWUVBeDk5Nm5EVlpCTWdUWFF2dENXT2M2Q0VrWWl2Ui9MWlU2RmREcFBkVXVXR2tMVUZCVlk5SgppWU0xMDFoMXlKRk1CbVpHT0hUVEZzb3RhVzdodUhDY20vYlV5K1pjdjNkZlNUWXFxbWRRQTJybHl4OHI0WXRHCmhXaEo2Y1pvSW56V0NWTXdrWVVXZHZyZzlRMXgxTzRyc0Y4OU1Nc2pKZ202MkQyYjg2VThyTWNDZ1lFQXdFVVMKYytZRTUxQlIydm5xY1R1M1V1aUdiSVM3b3liTC9IZk5hQnArcDVtNDczYzBWYjhZVFVYSWJ4NnNKcmRvT0dlSQp0eWJNallHaWlTVzA3TUdoaHNkNjZSdC9vZlN1aldodjNEbnROazhsREdCc3JlMUhnV3dkZnBvZnVIdlR0elRmCmI5MWpaZHE0SGFtZFdPbnhOczEwT3cvS1M5VGpFSGdIOFpSRHpvc0NnWUF5TE1QVzJ2MlIyYmdpcjQrOXY2ZncKRGdIWU15L3Z4TVhqM2FRNWtXMVBiRmVPbE1jVjkzWjZjdG5jU0dTcENQQ1EyclBlRUZXOWJ0dWZrQnBSOXRNWgp4QWovZHNEcHY4bkgwelU2dWR5NFB1bVk2Q1pYNUdLN3NzWjdUVGR2RU8rYVA2djltKzlieHZjYURWbjZIaUFSCmtwY0YzTGppSDZjc0NhdFFxclprbVFLQmdRQ3N0RjZpNUphN0FKYkdUMzZiUDd5b0tGMjIxSE9IVmE0ZGxhOVkKTjVSVkQrdmlqZnpnbU1wSGZzdFBwUW1WcldGY2FRT1JJTFRVMXdFY21GWXY1SzRtMXNBODY0cDErOGRmRmRTRQp5VE9lZVBFYWNQS3VPRmptbENyYU1hOFVrNFhWSnhVYzhvdjZUY0RjUkNNbVh0MWhFS082K2JBSTlhMFFlZ0VJCnF0bE5pUUtCZ0Rkek1zOVhvRnJWTDVyaEdYL0NUY3YyUHorU3VGVXlSV0JVOWJ6SlFuSDA5OGxqQTUybWM4d2EKZ0lzTWl1ZmFnT0hKVmRBeThoTSttVGNCS0UyYmpyRllwRk1uZlhiNmZTb3lDdVh1SnFkNmhwdFEvSU15QjZ5Mwo4cVNtU04ySW1pOGVaRGxOYmpuK0NEYTREWjh2cFdXN3pHYy9MK1I4c3hIQ204NkxtZWJkCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
    kind: Secret
    metadata:
      name: kubescape-admission-webhook.NAMESPACE.svc-kubescape-tls-pair
      namespace: kubescape
    type: kubernetes.io/tls
  28: |
    apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingWebhookConfiguration
    metadata:
      name: validation
    webhooks:
      - admissionReviewVersions:
          - v1
        clientConfig:
          caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJRENDQWdpZ0F3SUJBZ0lSQU5jdnI2bjVjWTBTVi9kenFleGJJNU13RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQXd3UEtpNU9RVTFGVTFCQlEwVXVjM1pqTUI0WERUSTBNRFl4T1RBNE16a3dPRm9YRFRJMwpNRFF3T1RBNE16a3dPRm93R2pFWU1CWUdBMVVFQXd3UEtpNU9RVTFGVTFCQlEwVXVjM1pqTUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMUdEUXZBYkJUVGtLU3FNZVRpTlg2WEtsVFpmbU5hOCsKV2RkQnFLVUF4dVljWTFzMTJDUm1KWUJtaVNCdW4zYlVCeHExcmtnOTloQlJnUEMxT3Azb3BNVHgyU2tsZmFzUQpFaUU5VUEzYlNqZHNnVk9iTTlYVGNwcGJWSk55ZWhDeHUwdkNjV2tuR1VYYW1WWnd2WXZBRkhVbnBsOGNoN1hHCnhvaXhFSFJ0UVJ5R0xNZ1dCOWdpelYwVDJXcjQyeW1OMWR2aElhNzZkQnNMZ3JQcm5xdUJuRW42QzNnM3BPT0IKR21oWFUxSmE0cWU3MXVydVkvbHZLNFhpc0NZS0pGc3RXdngyMkJ4RTBCTDEvZUs5bGVoZXhkbWc3Smd5YVAxaApnRGxyL0tYdnNiMlgxTHhFRkRVc0lBdzRmaVlkdnZCVmhoVTZCYnd5QmJHbzkwZWx1TXN5MVFJREFRQUJvMkV3Clh6QU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUMKTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkxTcER1czJGc2c1Z0tNMkt5RnVFeHQvWU40bQpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNreFBwT2tQSVZlSndsTjlFazFKMzRtbmUrUDAyQkp1VkpVWHBGCkIrUGFpaFNOODhUYWcxcXhvcVphQ2FJaHJSdGtLVjVQQ01QRU8zU2ZqS2hoMHFtMTVydVQxUE5LRW9KbnZicGMKSU1UVHM0RmloQXNIVURMOFNkOUg4aURnT3VhL2l1TFJFK1hEK2hCMzhSN3JGUTl1c1BDbkpVNmd3WWptR3ZMSApFc2NWV2ZNWXozdEhyRzFtRnpESnBQLzFnUGJFM3dYSzhwcnBDTnpoSWsxMWNHbFFVSGkxd2ZGL1dzMjRpUlZBCjFWSGNsczNwY3pvL3hzOHhLV0pDREVCb1pjN1ZRRnVtU2Jzc3U0cjc0WS9zalhXbWZaOWRvWklmSU1RR2VJc1kKbTJLNGZ0amFpMDJiUUJFWXJLNU1WZFc3WXZyazg5c1ZGT2N4dGM4eEZmM1NwWkFpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          service:
            name: kubescape-admission-webhook
            namespace: kubescape
            path: /validate
            port: 443
        failurePolicy: Ignore
        name: validation.kubescape.admission
        rules:
          - apiGroups:
              - '*'
            apiVersions:
              - v1
            operations:
              - CREATE
              - UPDATE
              - DELETE
              - CONNECT
            resources:
              - pods
              - pods/exec
              - pods/portforward
              - pods/attach
              - clusterrolebindings
              - rolebindings
            scope: '*'
        sideEffects: None
  29: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - nodes
          - namespaces
          - configmaps
          - secrets
          - services
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - deployments
          - daemonsets
          - statefulsets
          - replicasets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - spdx.softwarecomposition.kubescape.io
        resources:
          - vulnerabilitymanifests
          - vulnerabilitymanifestsummaries
          - workloadconfigurationscans
          - workloadconfigurationscansummaries
          - openvulnerabilityexchangecontainers
          - sbomsyftfiltereds
          - sbomsyfts
        verbs:
          - get
          - watch
          - list
          - delete
      - apiGroups:
          - kubescape.io
        resources:
          - serviceauthentication
        verbs:
          - get
          - watch
          - list
          - create
          - update
          - delete
  30: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: operator
    subjects:
      - kind: ServiceAccount
        name: operator
        namespace: kubescape
  31: |
    apiVersion: v1
    data:
      config.json: |
        {
            "namespace": "kubescape",
            "triggersecurityframework": true,
            "httpExporterConfig":{"maxAlertsPerMinute":1000,"method":"POST","url":"http://synchronizer:8089/apis/v1/kubescape.io"}
        }
    kind: ConfigMap
    metadata:
      labels:
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
      name: operator
      namespace: kubescape
  32: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: operator
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: operator
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: operator
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: operator
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/capabilities-config: e5b705ab784535237ec922917c2b3da0da94e65a03997688a8d8a0bcdb86d809
            checksum/cloud-config: c8580dbb81fa1c832dc787a966fc068feacfb2ee7f67fdd928c256f4094ad656
            checksum/cloud-secret: baefa7c2a6f06e1afdaffb0829d1caf36ff7428773197f1e5ca4731c132ecb78
            checksum/matching-rules-config: 9282b3916f506ac98eccbdfe686271420ff520374de611f7efce8235dcdf8809
            checksum/operator-config: 13ee93fac3da2973afa49f148b1538ee1f29c6a7a720a3a4a6f2de8997cb6f20
          labels:
            app: operator
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: operator
            helm.sh/chart: kubescape-operator-1.18.16
            kubescape.io/tier: core
            otel: enabled
            tier: ks-control-plane
        spec:
          affinity: null
          automountServiceAccountToken: true
          containers:
            - args:
                - -alsologtostderr
                - -v=4
                - 2>&1
              env:
                - name: HELM_RELEASE
                  value: kubescape-operator-1.18.16
                - name: GOMEMLIMIT
                  value: 100MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/operator:v0.2.13
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /v1/liveness
                  port: readiness-port
                initialDelaySeconds: 3
                periodSeconds: 3
              name: operator
              ports:
                - containerPort: 4002
                  name: trigger-port
                  protocol: TCP
                - containerPort: 8000
                  name: readiness-port
                  protocol: TCP
                - containerPort: 8443
                  name: admission-port
                  protocol: TCP
              readinessProbe:
                httpGet:
                  path: /v1/readiness
                  port: readiness-port
                initialDelaySeconds: 10
                periodSeconds: 5
              resources:
                limits:
                  cpu: 300m
                  memory: 300Mi
                requests:
                  cpu: 50m
                  memory: 100Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /etc/credentials
                  name: cloud-secret
                  readOnly: true
                - mountPath: /tmp
                  name: tmp-dir
                - mountPath: /etc/config/clusterData.json
                  name: ks-cloud-config
                  readOnly: true
                  subPath: clusterData.json
                - mountPath: /etc/config/capabilities.json
                  name: ks-capabilities
                  readOnly: true
                  subPath: capabilities.json
                - mountPath: /etc/config/matchingRules.json
                  name: cs-matching-rules
                  readOnly: true
                  subPath: matchingRules.json
                - mountPath: /etc/config/config.json
                  name: config
                  readOnly: true
                  subPath: config.json
                - mountPath: /etc/certs
                  name: tls-certs
                  readOnly: true
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: operator
          tolerations: null
          volumes:
            - name: cloud-secret
              secret:
                secretName: cloud-secret
            - name: tls-certs
              secret:
                secretName: kubescape-admission-webhook.kubescape.svc-kubescape-tls-pair
            - emptyDir: {}
              name: tmp-dir
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                name: ks-cloud-config
              name: ks-cloud-config
            - configMap:
                items:
                  - key: capabilities
                    path: capabilities.json
                name: ks-capabilities
              name: ks-capabilities
            - configMap:
                items:
                  - key: config.json
                    path: config.json
                name: operator
              name: config
            - configMap:
                items:
                  - key: matchingRules.json
                    path: matchingRules.json
                name: cs-matching-rules
              name: cs-matching-rules
  33: |
    apiVersion: v1
    data:
      cronjobTemplate: "apiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: kubescape-scheduler\n  namespace: kubescape\n  labels:\n    app: kubescape-scheduler\n    tier: ks-control-plane\n    kubescape.io/ignore: \"true\"\n    kubescape.io/tier: \"core\"\n    armo.tier: \"kubescape-scan\"\nspec:\n  schedule: \"1 2 3 4 5\"\n  successfulJobsHistoryLimit: 3\n  failedJobsHistoryLimit: 1\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          labels:\n            armo.tier: \"kubescape-scan\"\n            kubescape.io/tier: \"core\"\n        spec:\n          containers:\n          - name: kubescape-scheduler\n            image: \"quay.io/kubescape/http-request:v0.2.6\"\n            imagePullPolicy: IfNotPresent\n            securityContext:\n              allowPrivilegeEscalation: false\n              readOnlyRootFilesystem: true\n              runAsNonRoot: true\n              runAsUser: 100\n            resources:\n              limits:\n                cpu: 10m\n                memory: 20Mi\n              requests:\n                cpu: 1m\n                memory: 10Mi\n            args: \n              - -method=post\n              - -scheme=http\n              - -host=operator:4002\n              - -path=v1/triggerAction\n              - -headers=Content-Type:application/json\n              - -path-body=/home/ks/request-body.json\n            volumeMounts:\n              - name: \"request-body-volume\"\n                mountPath: /home/ks/request-body.json\n                subPath: request-body.json\n                readOnly: true\n          restartPolicy: Never\n          automountServiceAccountToken: false\n          nodeSelector:\n          affinity:\n          tolerations:\n          volumes:\n            - name: \"request-body-volume\" # placeholder\n              configMap:\n                name: kubescape-scheduler"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubescape-cronjob-template
      namespace: kubescape
  34: |
    apiVersion: v1
    data:
      cronjobTemplate: "apiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: kubevuln-scheduler\n  namespace: kubescape\n  labels:\n    app: kubevuln-scheduler\n    kubescape.io/ignore: \"true\"\n    kubescape.io/tier: \"core\"\n    tier: ks-control-plane\n    armo.tier: \"vuln-scan\"\nspec:\n  schedule: \"1 2 3 4 5\" \n  successfulJobsHistoryLimit: 3\n  failedJobsHistoryLimit: 1\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          labels:\n            armo.tier: \"vuln-scan\"\n            kubescape.io/tier: \"core\"\n        spec:\n          containers:\n          - name: kubevuln-scheduler\n            image: \"quay.io/kubescape/http-request:v0.2.6\"\n            imagePullPolicy: IfNotPresent\n            securityContext:\n              allowPrivilegeEscalation: false\n              readOnlyRootFilesystem: true\n              runAsNonRoot: true\n              runAsUser: 100\n            resources:\n              limits:\n                cpu: 10m\n                memory: 20Mi\n              requests:\n                cpu: 1m\n                memory: 10Mi\n            args: \n              - -method=post\n              - -scheme=http\n              - -host=operator:4002\n              - -path=v1/triggerAction\n              - -headers=Content-Type:application/json\n              - -path-body=/home/ks/request-body.json\n            volumeMounts:\n              - name: \"request-body-volume\"\n                mountPath: /home/ks/request-body.json\n                subPath: request-body.json\n                readOnly: true\n          restartPolicy: Never\n          automountServiceAccountToken: false\n          nodeSelector:\n          affinity:\n          tolerations:\n          volumes:\n            - name: \"request-body-volume\" # placeholder\n              configMap:\n                name: kubevuln-scheduler"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: kubevuln-cronjob-template
      namespace: kubescape
  35: |
    apiVersion: v1
    data:
      cronjobTemplate: "apiVersion: batch/v1\nkind: CronJob\nmetadata:\n  name: registry-scheduler\n  namespace: kubescape\n  labels:\n    app: registry-scheduler\n    kubescape.io/ignore: \"true\"\n    kubescape.io/tier: \"core\"\n    tier: ks-control-plane\n    armo.tier: \"registry-scan\"\nspec:\n  schedule: \"0 0 * * *\"\n  successfulJobsHistoryLimit: 3\n  failedJobsHistoryLimit: 1\n  jobTemplate:\n    spec:\n      template:\n        metadata:\n          labels:\n            armo.tier: \"registry-scan\"\n            kubescape.io/tier: \"core\"\n        spec:\n          containers:\n          - name: registry-scheduler\n            image: \"quay.io/kubescape/http-request:v0.2.6\"\n            imagePullPolicy: IfNotPresent\n            securityContext:\n              allowPrivilegeEscalation: false\n              readOnlyRootFilesystem: true\n              runAsNonRoot: true\n              runAsUser: 100\n            resources:\n              limits:\n                cpu: 10m\n                memory: 20Mi\n              requests:\n                cpu: 1m\n                memory: 10Mi\n            args: \n              - -method=post\n              - -scheme=http\n              - -host=operator:4002\n              - -path=v1/triggerAction\n              - -headers=Content-Type:application/json\n              - -path-body=/home/ks/request-body.json\n            volumeMounts:\n              - name: \"request-body-volume\"\n                mountPath: /home/ks/request-body.json\n                subPath: request-body.json\n                readOnly: true\n          restartPolicy: Never\n          automountServiceAccountToken: false\n          nodeSelector:\n          affinity:\n          tolerations:\n          volumes:\n            - name: \"request-body-volume\" # placeholder\n              configMap:\n                name: registry-scheduler"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: registry-scan-cronjob-template
      namespace: kubescape
  36: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
          - secrets
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
          - delete
      - apiGroups:
          - batch
        resources:
          - cronjobs
        verbs:
          - create
          - get
          - update
          - watch
          - list
          - patch
          - delete
  37: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: operator
    subjects:
      - kind: ServiceAccount
        name: operator
        namespace: kubescape
  38: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: operator
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
    spec:
      ports:
        - port: 4002
          protocol: TCP
          targetPort: 4002
      selector:
        app: operator
      type: ClusterIP
  39: |
    apiVersion: v1
    automountServiceAccountToken: false
    kind: ServiceAccount
    metadata:
      labels:
        app: operator
        kubescape.io/ignore: "true"
      name: operator
      namespace: kubescape
  40: |
    apiVersion: v1
    data:
      otel-collector-config.yaml: "\n# receivers configure how data gets into the Collector.\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n  hostmetrics:\n    collection_interval: 30s\n    scrapers:\n      cpu:\n      memory:\n\n# processors specify what happens with the received data.\nprocessors:\n  attributes/ksCloud:\n    actions:\n      - key: account_id\n        value: \"\"\n        action: upsert\n      - key: cluster_name\n        value: \"kind-kind\"\n        action: upsert\n  batch:\n    send_batch_size: 10000\n    timeout: 10s\n\n# exporters configure how to send processed data to one or more backends.\nexporters:\n  otlp/ksCloud:\n    endpoint: \"\"\n    tls:\n      insecure: false\n  otlp:\n    endpoint: \"otelCollector:4317\"\n    tls:\n      insecure: true\n    headers:\n      uptrace-dsn: \n\n# service pulls the configured receivers, processors, and exporters together into\n# processing pipelines. Unused receivers/processors/exporters are ignored.\nservice:\n  pipelines:\n    traces:\n      receivers: [otlp]\n      processors: [batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp\n    metrics/2:\n      receivers: [hostmetrics]\n      processors: [attributes/ksCloud, batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp\n    metrics:\n      receivers: [otlp]\n      processors: [attributes/ksCloud, batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp\n    logs:\n      receivers: [otlp]\n      processors: [attributes/ksCloud, batch]\n      exporters:\n        - otlp/ksCloud\n        - otlp"
    kind: ConfigMap
    metadata:
      labels:
        app: ks-cloud-config
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: otel-collector-config
      namespace: kubescape
  41: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: otel-collector
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: otel-collector
        helm.sh/chart: kubescape-operator-1.18.16
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
        tier: ks-control-plane
      name: otel-collector
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: otel-collector
          tier: ks-control-plane
      strategy:
        rollingUpdate:
          maxSurge: 0%
          maxUnavailable: 100%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/otel-config: c84642a24d2e26a1cec49382223406fd1f890716140197af059db0fcc91f19ad
          labels:
            app: otel-collector
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: otel-collector
            kubescape.io/tier: core
            tier: ks-control-plane
        spec:
          affinity: null
          containers:
            - command:
                - /otelcol
                - --config=/conf/otel-collector-config.yaml
              env:
                - name: CLOUD_OTEL_COLLECTOR_URL
                  valueFrom:
                    configMapKeyRef:
                      key: metrics
                      name: ks-cloud-config
                - name: GOMEMLIMIT
                  value: 500MiB
                - name: GOGC
                  value: "80"
              image: docker.io/otel/opentelemetry-collector:0.97.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                tcpSocket:
                  port: otlp
              name: otel-collector
              ports:
                - containerPort: 4317
                  name: otlp
                  protocol: TCP
                - containerPort: 4318
                  name: otlp-http
                  protocol: TCP
              readinessProbe:
                tcpSocket:
                  port: otlp
              resources:
                limits:
                  cpu: 1
                  memory: 1Gi
                requests:
                  cpu: 100m
                  memory: 500Mi
              securityContext:
                allowPrivilegeEscalation: false
                runAsNonRoot: true
                runAsUser: 100
              volumeMounts:
                - mountPath: /conf
                  name: otel-collector-config-volume
          nodeSelector: null
          serviceAccountName: default
          tolerations: null
          volumes:
            - configMap:
                name: otel-collector-config
              name: otel-collector-config-volume
  42: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: otel-collector
        kubescape.io/ignore: "true"
      name: otel-collector
      namespace: kubescape
    spec:
      ports:
        - name: otlp
          port: 4317
          protocol: TCP
          targetPort: 4317
        - name: otlp-http
          port: 4318
          protocol: TCP
          targetPort: 4318
      selector:
        app: otel-collector
      type: ClusterIP
  43: |
    apiVersion: apiregistration.k8s.io/v1
    kind: APIService
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: v1beta1.spdx.softwarecomposition.kubescape.io
    spec:
      group: spdx.softwarecomposition.kubescape.io
      groupPriorityMinimum: 1000
      insecureSkipTLSVerify: true
      service:
        name: storage
        namespace: kubescape
      version: v1beta1
      versionPriority: 15
  44: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
          - endpoints
          - namespaces
          - nodes
          - persistentvolumeclaims
          - persistentvolumes
          - pods
          - secrets
          - serviceaccounts
          - services
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - admissionregistration.k8s.io
        resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apiregistration.k8s.io
        resources:
          - apiservices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - apps
        resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - batch
        resources:
          - cronjobs
          - jobs
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - discovery.k8s.io
        resources:
          - endpointslices
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - flowcontrol.apiserver.k8s.io
        resources:
          - prioritylevelconfigurations
          - flowschemas
        verbs:
          - get
          - watch
          - list
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - clusterroles
          - clusterrolebindings
          - roles
          - rolebindings
        verbs:
          - get
          - watch
          - list
  45: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage:system:auth-delegator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subjects:
      - kind: ServiceAccount
        name: storage
        namespace: kubescape
  46: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: storage
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: storage
    subjects:
      - kind: ServiceAccount
        name: storage
        namespace: kubescape
  47: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/component: apiserver
        app.kubernetes.io/name: storage
        app.kubernetes.io/part-of: kubescape-storage
        kubescape.io/ignore: "true"
        kubescape.io/tier: core
      name: storage
      namespace: kubescape
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          app.kubernetes.io/component: apiserver
          app.kubernetes.io/name: storage
          app.kubernetes.io/part-of: kubescape-storage
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app.kubernetes.io/component: apiserver
            app.kubernetes.io/name: storage
            app.kubernetes.io/part-of: kubescape-storage
            kubescape.io/tier: core
            otel: enabled
        spec:
          affinity: null
          containers:
            - env:
                - name: CLEANUP_INTERVAL
                  value: 6h
                - name: GOMEMLIMIT
                  value: 1200MiB
                - name: KS_LOGGER_LEVEL
                  value: info
                - name: KS_LOGGER_NAME
                  value: zap
                - name: ACCOUNT_ID
                  valueFrom:
                    secretKeyRef:
                      key: account
                      name: cloud-secret
                - name: OTEL_COLLECTOR_SVC
                  value: otel-collector:4317
              image: quay.io/kubescape/storage:v0.0.85
              imagePullPolicy: IfNotPresent
              livenessProbe:
                tcpSocket:
                  port: 8443
              name: apiserver
              readinessProbe:
                tcpSocket:
                  port: 8443
              resources:
                limits:
                  cpu: 1500m
                  memory: 1500Mi
                requests:
                  cpu: 100m
                  memory: 400Mi
              securityContext:
                allowPrivilegeEscalation: false
                runAsNonRoot: true
              volumeMounts:
                - mountPath: /data
                  name: data
                - mountPath: /etc/config
                  name: ks-cloud-config
                  readOnly: true
          nodeSelector: null
          securityContext:
            fsGroup: 65532
            runAsUser: 65532
          serviceAccountName: storage
          tolerations: null
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: kubescape-storage
            - configMap:
                items:
                  - key: clusterData
                    path: clusterData.json
                name: ks-cloud-config
              name: ks-cloud-config
  48: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app.kubernetes.io/component: apiserver
        app.kubernetes.io/name: storage
        app.kubernetes.io/part-of: kubescape-storage
        kubescape.io/ignore: "true"
      name: kubescape-storage
      namespace: kubescape
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
  49: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage-auth-reader
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: extension-apiserver-authentication-reader
    subjects:
      - kind: ServiceAccount
        name: storage
        namespace: kubescape
  50: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage
      namespace: kubescape
    spec:
      ports:
        - port: 443
          protocol: TCP
          targetPort: 8443
      selector:
        app.kubernetes.io/component: apiserver
        app.kubernetes.io/name: storage
        app.kubernetes.io/part-of: kubescape-storage
  51: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: storage
      namespace: kubescape
with multiple private registry credentials:
  1: |
    apiVersion: v1
    kind: Secret
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape-registry-scan-secrets
      namespace: kubescape
    stringData:
      registriesAuth: "[\n  {\n    \"registry\": \"foo.example.com\",\n    \"username\": \"bar\",\n    \"password\": \"baz\",\n    \"skipTLSVerify\": true,        \n    \"auth_method\": \"credentials\"\n  },\n  {\n    \"registry\": \"test.example.com\",\n    \"username\": \"xxx\",\n    \"password\": \"yyy\",\n    \"http\": true,        \n    \"auth_method\": \"credentials\"\n  }\n]\n"
    type: Opaque
with single private registry credentials:
  1: |
    apiVersion: v1
    kind: Secret
    metadata:
      labels:
        kubescape.io/ignore: "true"
      name: kubescape-registry-scan-secrets
      namespace: kubescape
    stringData:
      registriesAuth: "[\n  {\n    \"registry\": \"foo.example.com\",\n    \"username\": \"bar\",\n    \"password\": \"baz\",        \n    \"auth_method\": \"credentials\"\n  }\n]\n"
    type: Opaque
