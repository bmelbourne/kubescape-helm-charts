{{- $components := fromYaml (include "components" .) }}
{{- if and .Values.global.networkPolicy.enabled $components.kubescape.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.kubescape.name }}
  namespace: {{ .Values.ksNamespace }}
  labels:
    app: {{ .Values.kubescape.name }}
    tier: {{ .Values.global.namespaceTier }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: {{ .Values.kubescape.name }}
      tier: {{ .Values.global.namespaceTier }}
  policyTypes:
    - Ingress
  {{- if .Values.global.networkPolicy.createEgressRules }}
    - Egress
  egress:
      # - backend api server
      # - GitRegoStore (https://github.com/kubescape/regolibrary/releases/)
    - ports:
        - port: 443
          protocol: TCP
      # Cloud Vendor detection (Instance Metadata Services)
    - ports:
        - port: 80
          protocol: TCP
      to:
        - ipBlock:
            cidr: 169.254.169.254/32
{{ tpl (.Files.Get "assets/api-server-egress-rules.yaml") . | indent 4 }}
{{ tpl (.Files.Get "assets/common-egress-rules.yaml") . | indent 4 }}
  {{- end }}
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/instance: {{ .Release.Name }}
              app.kubernetes.io/name: {{ .Values.operator.name }}
              tier: {{ .Values.global.namespaceTier }}
      ports:
        - port: http
          protocol: TCP
{{ end }}
