{{- $components := fromYaml (include "components" .) }}
{{- if $components.operator.enabled }}
{{- $svcName := (printf "kubescape-admission-webhook.%s.svc" .Release.Namespace) -}}
{{- $ca := dict "Key" "mock-ca-key" "Cert" "mock-ca-cert" -}}
{{- $cert := dict "Key" "mock-cert-key" "Cert" "mock-cert-cert" -}}
{{- if not .Values.unittest }}
  {{- $ca := genCA (printf "*.%s.svc" .Release.Namespace) 1024 -}}
  {{- $cert := genSignedCert $svcName nil (list $svcName) 1024 $ca -}}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $svcName }}-kubescape-tls-pair
  namespace: {{ .Values.ksNamespace }}
type: kubernetes.io/tls
data:
  tls.key: {{ $cert.Key | b64enc }}
  tls.crt: {{ $cert.Cert | b64enc }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation
webhooks:
  - name: validation.kubescape.admission
    clientConfig:
      service:
        name: kubescape-admission-webhook
        namespace: {{ .Values.ksNamespace }}
        path: /validate
        port: 443
      caBundle: {{ $ca.Cert | b64enc }}
    admissionReviewVersions: ["v1"]
    sideEffects: None
    rules:
      - operations: ["CREATE", "UPDATE", "DELETE", "CONNECT"]
        apiGroups: ["*"]
        apiVersions: ["v1"]
        resources: ["pods", "pods/exec", "pods/portforward", "pods/attach", "clusterrolebindings", "rolebindings"]
        scope: "*"
    failurePolicy: Ignore
{{- end }}